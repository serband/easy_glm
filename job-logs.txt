2025-08-13T18:02:03.1959704Z Current runner version: '2.327.1'
2025-08-13T18:02:03.1994171Z ##[group]Runner Image Provisioner
2025-08-13T18:02:03.1995437Z Hosted Compute Agent
2025-08-13T18:02:03.1996410Z Version: 20250812.370
2025-08-13T18:02:03.1997444Z Commit: 4a2b2bf7520004e3e907c2150c8cabe342a3da32
2025-08-13T18:02:03.1998688Z Build Date: 2025-08-12T16:08:14Z
2025-08-13T18:02:03.1999745Z ##[endgroup]
2025-08-13T18:02:03.2000676Z ##[group]Operating System
2025-08-13T18:02:03.2002000Z Ubuntu
2025-08-13T18:02:03.2002829Z 24.04.2
2025-08-13T18:02:03.2003601Z LTS
2025-08-13T18:02:03.2004385Z ##[endgroup]
2025-08-13T18:02:03.2005387Z ##[group]Runner Image
2025-08-13T18:02:03.2006356Z Image: ubuntu-24.04
2025-08-13T18:02:03.2007187Z Version: 20250804.2.0
2025-08-13T18:02:03.2009180Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250804.2/images/ubuntu/Ubuntu2404-Readme.md
2025-08-13T18:02:03.2012240Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250804.2
2025-08-13T18:02:03.2014049Z ##[endgroup]
2025-08-13T18:02:03.2015929Z ##[group]GITHUB_TOKEN Permissions
2025-08-13T18:02:03.2018735Z Contents: read
2025-08-13T18:02:03.2019604Z Metadata: read
2025-08-13T18:02:03.2020387Z Packages: read
2025-08-13T18:02:03.2021588Z ##[endgroup]
2025-08-13T18:02:03.2024393Z Secret source: Actions
2025-08-13T18:02:03.2026181Z Prepare workflow directory
2025-08-13T18:02:03.2423220Z Prepare all required actions
2025-08-13T18:02:03.2479010Z Getting action download info
2025-08-13T18:02:03.6524418Z Download action repository 'actions/checkout@v4' (SHA:08eba0b27e820071cde6df949e0beb9ba4906955)
2025-08-13T18:02:04.8029223Z Download action repository 'actions/setup-python@v5' (SHA:a26af69be951a213d495a4c3e4e4022e16d87065)
2025-08-13T18:02:05.2299264Z Download action repository 'codecov/codecov-action@v4' (SHA:b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238)
2025-08-13T18:02:05.6048109Z Download action repository 'actions/upload-artifact@v4' (SHA:ea165f8d65b6e75b540449e92b4886f43607fa02)
2025-08-13T18:02:05.8678685Z Complete job name: tests (3.13)
2025-08-13T18:02:05.9315812Z ##[group]Run actions/checkout@v4
2025-08-13T18:02:05.9316425Z with:
2025-08-13T18:02:05.9316663Z   repository: serband/easy_glm
2025-08-13T18:02:05.9317075Z   token: ***
2025-08-13T18:02:05.9317296Z   ssh-strict: true
2025-08-13T18:02:05.9317524Z   ssh-user: git
2025-08-13T18:02:05.9317761Z   persist-credentials: true
2025-08-13T18:02:05.9318043Z   clean: true
2025-08-13T18:02:05.9318290Z   sparse-checkout-cone-mode: true
2025-08-13T18:02:05.9318569Z   fetch-depth: 1
2025-08-13T18:02:05.9318799Z   fetch-tags: false
2025-08-13T18:02:05.9319031Z   show-progress: true
2025-08-13T18:02:05.9319264Z   lfs: false
2025-08-13T18:02:05.9319471Z   submodules: false
2025-08-13T18:02:05.9319711Z   set-safe-directory: true
2025-08-13T18:02:05.9320150Z ##[endgroup]
2025-08-13T18:02:06.0380832Z Syncing repository: serband/easy_glm
2025-08-13T18:02:06.0382720Z ##[group]Getting Git version info
2025-08-13T18:02:06.0383166Z Working directory is '/home/runner/work/easy_glm/easy_glm'
2025-08-13T18:02:06.0383858Z [command]/usr/bin/git version
2025-08-13T18:02:06.1646861Z git version 2.50.1
2025-08-13T18:02:06.1676092Z ##[endgroup]
2025-08-13T18:02:06.1692685Z Temporarily overriding HOME='/home/runner/work/_temp/89a1c41a-67ad-4c91-b486-cea1a04cc9eb' before making global git config changes
2025-08-13T18:02:06.1694203Z Adding repository directory to the temporary git global config as a safe directory
2025-08-13T18:02:06.1699017Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/easy_glm/easy_glm
2025-08-13T18:02:06.1784204Z Deleting the contents of '/home/runner/work/easy_glm/easy_glm'
2025-08-13T18:02:06.1787682Z ##[group]Initializing the repository
2025-08-13T18:02:06.1791629Z [command]/usr/bin/git init /home/runner/work/easy_glm/easy_glm
2025-08-13T18:02:06.2723751Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-08-13T18:02:06.2725017Z hint: is subject to change. To configure the initial branch name to use in all
2025-08-13T18:02:06.2726046Z hint: of your new repositories, which will suppress this warning, call:
2025-08-13T18:02:06.2726464Z hint:
2025-08-13T18:02:06.2726784Z hint: 	git config --global init.defaultBranch <name>
2025-08-13T18:02:06.2727147Z hint:
2025-08-13T18:02:06.2727471Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-08-13T18:02:06.2728033Z hint: 'development'. The just-created branch can be renamed via this command:
2025-08-13T18:02:06.2728437Z hint:
2025-08-13T18:02:06.2728659Z hint: 	git branch -m <name>
2025-08-13T18:02:06.2728934Z hint:
2025-08-13T18:02:06.2729278Z hint: Disable this message with "git config set advice.defaultBranchName false"
2025-08-13T18:02:06.2778603Z Initialized empty Git repository in /home/runner/work/easy_glm/easy_glm/.git/
2025-08-13T18:02:06.2791630Z [command]/usr/bin/git remote add origin https://github.com/serband/easy_glm
2025-08-13T18:02:06.2879410Z ##[endgroup]
2025-08-13T18:02:06.2880172Z ##[group]Disabling automatic garbage collection
2025-08-13T18:02:06.2884649Z [command]/usr/bin/git config --local gc.auto 0
2025-08-13T18:02:06.2912699Z ##[endgroup]
2025-08-13T18:02:06.2913460Z ##[group]Setting up auth
2025-08-13T18:02:06.2920379Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-08-13T18:02:06.2949843Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-08-13T18:02:06.4928630Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-08-13T18:02:06.4957839Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-08-13T18:02:06.5171366Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-08-13T18:02:06.5204745Z ##[endgroup]
2025-08-13T18:02:06.5205338Z ##[group]Fetching the repository
2025-08-13T18:02:06.5212748Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +6fd69c31a984e2f06837c087cb665bee541a6d3c:refs/remotes/origin/main
2025-08-13T18:02:06.9080837Z From https://github.com/serband/easy_glm
2025-08-13T18:02:06.9081645Z  * [new ref]         6fd69c31a984e2f06837c087cb665bee541a6d3c -> origin/main
2025-08-13T18:02:06.9183130Z ##[endgroup]
2025-08-13T18:02:06.9183774Z ##[group]Determining the checkout info
2025-08-13T18:02:06.9185289Z ##[endgroup]
2025-08-13T18:02:06.9190583Z [command]/usr/bin/git sparse-checkout disable
2025-08-13T18:02:06.9304919Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-08-13T18:02:06.9335472Z ##[group]Checking out the ref
2025-08-13T18:02:06.9341394Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-08-13T18:02:06.9408630Z Switched to a new branch 'main'
2025-08-13T18:02:06.9411948Z branch 'main' set up to track 'origin/main'.
2025-08-13T18:02:06.9418396Z ##[endgroup]
2025-08-13T18:02:06.9457606Z [command]/usr/bin/git log -1 --format=%H
2025-08-13T18:02:06.9480815Z 6fd69c31a984e2f06837c087cb665bee541a6d3c
2025-08-13T18:02:06.9703254Z ##[group]Run actions/setup-python@v5
2025-08-13T18:02:06.9703521Z with:
2025-08-13T18:02:06.9703697Z   python-version: 3.13
2025-08-13T18:02:06.9703884Z   cache: pip
2025-08-13T18:02:06.9704062Z   check-latest: false
2025-08-13T18:02:06.9704362Z   token: ***
2025-08-13T18:02:06.9704547Z   update-environment: true
2025-08-13T18:02:06.9704765Z   allow-prereleases: false
2025-08-13T18:02:06.9704962Z   freethreaded: false
2025-08-13T18:02:06.9705150Z ##[endgroup]
2025-08-13T18:02:07.1329583Z ##[group]Installed versions
2025-08-13T18:02:07.2041621Z Successfully set up CPython (3.13.5)
2025-08-13T18:02:07.2042854Z ##[endgroup]
2025-08-13T18:02:07.2748747Z [command]/opt/hostedtoolcache/Python/3.13.5/x64/bin/pip cache dir
2025-08-13T18:02:09.1660462Z /home/runner/.cache/pip
2025-08-13T18:02:09.4144921Z pip cache is not found
2025-08-13T18:02:09.4332302Z ##[group]Run echo "EASY_GLM_MAX_ROWS=500" >> $GITHUB_ENV
2025-08-13T18:02:09.4332997Z [36;1mecho "EASY_GLM_MAX_ROWS=500" >> $GITHUB_ENV[0m
2025-08-13T18:02:09.4598080Z shell: /usr/bin/bash -e {0}
2025-08-13T18:02:09.4598339Z env:
2025-08-13T18:02:09.4598601Z   pythonLocation: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4599044Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib/pkgconfig
2025-08-13T18:02:09.4599467Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4599829Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4600188Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4600564Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib
2025-08-13T18:02:09.4600863Z ##[endgroup]
2025-08-13T18:02:09.4706894Z ##[group]Run python -m pip install --upgrade pip
2025-08-13T18:02:09.4707273Z [36;1mpython -m pip install --upgrade pip[0m
2025-08-13T18:02:09.4707551Z [36;1mpip install .[dev][0m
2025-08-13T18:02:09.4743035Z shell: /usr/bin/bash -e {0}
2025-08-13T18:02:09.4743259Z env:
2025-08-13T18:02:09.4743499Z   pythonLocation: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4743905Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib/pkgconfig
2025-08-13T18:02:09.4744290Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4744624Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4744970Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:02:09.4745303Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib
2025-08-13T18:02:09.4745595Z   EASY_GLM_MAX_ROWS: 500
2025-08-13T18:02:09.4745788Z ##[endgroup]
2025-08-13T18:02:10.8182658Z Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages (25.2)
2025-08-13T18:02:11.8240753Z Processing /home/runner/work/easy_glm/easy_glm
2025-08-13T18:02:11.8259782Z   Installing build dependencies: started
2025-08-13T18:02:13.1799559Z   Installing build dependencies: finished with status 'done'
2025-08-13T18:02:13.1806936Z   Getting requirements to build wheel: started
2025-08-13T18:02:13.7249874Z   Getting requirements to build wheel: finished with status 'done'
2025-08-13T18:02:13.7258352Z   Preparing metadata (pyproject.toml): started
2025-08-13T18:02:13.9177689Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-08-13T18:02:14.0738663Z Collecting duckdb>=1.3.0 (from easy_glm==0.1.0)
2025-08-13T18:02:14.1548297Z   Downloading duckdb-1.3.2-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (7.0 kB)
2025-08-13T18:02:14.2925908Z Collecting polars>=1.17.0 (from easy_glm==0.1.0)
2025-08-13T18:02:14.3127194Z   Downloading polars-1.32.2-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (15 kB)
2025-08-13T18:02:14.4999091Z Collecting numpy>=1.24.0 (from easy_glm==0.1.0)
2025-08-13T18:02:14.5202941Z   Downloading numpy-2.3.2-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (62 kB)
2025-08-13T18:02:14.6305760Z Collecting pyarrow>=14.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:14.6501667Z   Downloading pyarrow-21.0.0-cp313-cp313-manylinux_2_28_x86_64.whl.metadata (3.3 kB)
2025-08-13T18:02:14.6853980Z Collecting glum>=3.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.2390094Z   Downloading glum-3.1.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.4 kB)
2025-08-13T18:02:15.3644088Z Collecting matplotlib>=3.7.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.3845074Z   Downloading matplotlib-3.10.5-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (11 kB)
2025-08-13T18:02:15.4032725Z Collecting seaborn>=0.12.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.4226915Z   Downloading seaborn-0.13.2-py3-none-any.whl.metadata (5.4 kB)
2025-08-13T18:02:15.5071532Z Collecting scikit-learn>=1.3.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.5275156Z   Downloading scikit_learn-1.7.1-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (11 kB)
2025-08-13T18:02:15.6400514Z Collecting pandas>=2.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.6598909Z   Downloading pandas-2.3.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (91 kB)
2025-08-13T18:02:15.7475977Z Collecting dask-ml>=2025.1.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.7673241Z   Downloading dask_ml-2025.1.0-py3-none-any.whl.metadata (6.0 kB)
2025-08-13T18:02:15.8576806Z Collecting numba>=0.61.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.8775893Z   Downloading numba-0.61.2-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (2.8 kB)
2025-08-13T18:02:15.9341598Z Collecting llvmlite>=0.44.0 (from easy_glm==0.1.0)
2025-08-13T18:02:15.9538071Z   Downloading llvmlite-0.44.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.0 kB)
2025-08-13T18:02:15.9912191Z Collecting pytest>=7.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:16.0107741Z   Downloading pytest-8.4.1-py3-none-any.whl.metadata (7.7 kB)
2025-08-13T18:02:16.0287471Z Collecting pytest-cov>=4.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:16.0482725Z   Downloading pytest_cov-6.2.1-py3-none-any.whl.metadata (30 kB)
2025-08-13T18:02:16.0958390Z Collecting black>=23.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:16.1156612Z   Downloading black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (81 kB)
2025-08-13T18:02:16.5052126Z Collecting ruff>=0.1.0 (from easy_glm==0.1.0)
2025-08-13T18:02:16.5249837Z   Downloading ruff-0.12.8-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-08-13T18:02:16.5399151Z Collecting jupyter>=1.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:16.5593916Z   Downloading jupyter-1.1.1-py2.py3-none-any.whl.metadata (2.0 kB)
2025-08-13T18:02:16.5923638Z Collecting ipykernel>=6.0.0 (from easy_glm==0.1.0)
2025-08-13T18:02:16.6119686Z   Downloading ipykernel-6.30.1-py3-none-any.whl.metadata (6.2 kB)
2025-08-13T18:02:16.6344630Z Collecting click>=8.0.0 (from black>=23.0.0->easy_glm==0.1.0)
2025-08-13T18:02:16.6538251Z   Downloading click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
2025-08-13T18:02:16.6660154Z Collecting mypy-extensions>=0.4.3 (from black>=23.0.0->easy_glm==0.1.0)
2025-08-13T18:02:16.6857072Z   Downloading mypy_extensions-1.1.0-py3-none-any.whl.metadata (1.1 kB)
2025-08-13T18:02:16.7022649Z Collecting packaging>=22.0 (from black>=23.0.0->easy_glm==0.1.0)
2025-08-13T18:02:16.7219989Z   Downloading packaging-25.0-py3-none-any.whl.metadata (3.3 kB)
2025-08-13T18:02:16.7381811Z Collecting pathspec>=0.9.0 (from black>=23.0.0->easy_glm==0.1.0)
2025-08-13T18:02:16.7575147Z   Downloading pathspec-0.12.1-py3-none-any.whl.metadata (21 kB)
2025-08-13T18:02:16.7779192Z Collecting platformdirs>=2 (from black>=23.0.0->easy_glm==0.1.0)
2025-08-13T18:02:16.7975023Z   Downloading platformdirs-4.3.8-py3-none-any.whl.metadata (12 kB)
2025-08-13T18:02:16.8317799Z Collecting dask-glm>=0.2.0 (from dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:16.8512385Z   Downloading dask_glm-0.3.2-py2.py3-none-any.whl.metadata (1.5 kB)
2025-08-13T18:02:16.8939198Z Collecting dask>=2025.1.0 (from dask[array,dataframe]>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:16.9135666Z   Downloading dask-2025.7.0-py3-none-any.whl.metadata (3.8 kB)
2025-08-13T18:02:16.9637144Z Collecting distributed>=2025.1.0 (from dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:16.9835453Z   Downloading distributed-2025.7.0-py3-none-any.whl.metadata (3.4 kB)
2025-08-13T18:02:16.9960114Z Collecting multipledispatch>=0.4.9 (from dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.0158638Z   Downloading multipledispatch-1.0.0-py3-none-any.whl.metadata (3.8 kB)
2025-08-13T18:02:17.1332815Z Collecting scipy (from dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.1536265Z   Downloading scipy-1.16.1-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (61 kB)
2025-08-13T18:02:17.1910322Z Collecting cloudpickle>=3.0.0 (from dask>=2025.1.0->dask[array,dataframe]>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.2106528Z   Downloading cloudpickle-3.1.1-py3-none-any.whl.metadata (7.1 kB)
2025-08-13T18:02:17.2346626Z Collecting fsspec>=2021.09.0 (from dask>=2025.1.0->dask[array,dataframe]>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.2541798Z   Downloading fsspec-2025.7.0-py3-none-any.whl.metadata (12 kB)
2025-08-13T18:02:17.3081261Z Collecting partd>=1.4.0 (from dask>=2025.1.0->dask[array,dataframe]>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.3275967Z   Downloading partd-1.4.2-py3-none-any.whl.metadata (4.6 kB)
2025-08-13T18:02:17.3719958Z Collecting pyyaml>=5.3.1 (from dask>=2025.1.0->dask[array,dataframe]>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.3916421Z   Downloading PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
2025-08-13T18:02:17.4036415Z Collecting toolz>=0.10.0 (from dask>=2025.1.0->dask[array,dataframe]>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.4230942Z   Downloading toolz-1.0.0-py3-none-any.whl.metadata (5.1 kB)
2025-08-13T18:02:17.4587429Z Collecting sparse>=0.7.0 (from dask-glm>=0.2.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.4782646Z   Downloading sparse-0.17.0-py2.py3-none-any.whl.metadata (5.3 kB)
2025-08-13T18:02:17.5074218Z Collecting jinja2>=2.10.3 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.5276389Z   Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
2025-08-13T18:02:17.5413424Z Collecting locket>=1.0.0 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.5606893Z   Downloading locket-1.0.0-py2.py3-none-any.whl.metadata (2.8 kB)
2025-08-13T18:02:17.6332041Z Collecting msgpack>=1.0.2 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.6529781Z   Downloading msgpack-1.1.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.4 kB)
2025-08-13T18:02:17.7295295Z Collecting psutil>=5.8.0 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.7496477Z   Downloading psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (22 kB)
2025-08-13T18:02:17.7684176Z Collecting sortedcontainers>=2.0.5 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.7879624Z   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)
2025-08-13T18:02:17.8017174Z Collecting tblib>=1.6.0 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.8214054Z   Downloading tblib-3.1.0-py3-none-any.whl.metadata (25 kB)
2025-08-13T18:02:17.8626487Z Collecting tornado>=6.2.0 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.8823968Z   Downloading tornado-6.5.2-cp39-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.8 kB)
2025-08-13T18:02:17.9071232Z Collecting urllib3>=1.26.5 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.9283724Z   Downloading urllib3-2.5.0-py3-none-any.whl.metadata (6.5 kB)
2025-08-13T18:02:17.9434156Z Collecting zict>=3.0.0 (from distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:17.9628340Z   Downloading zict-3.0.0-py2.py3-none-any.whl.metadata (899 bytes)
2025-08-13T18:02:17.9897096Z Collecting joblib (from glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.0094100Z   Downloading joblib-1.5.1-py3-none-any.whl.metadata (5.6 kB)
2025-08-13T18:02:18.0648268Z Collecting numexpr (from glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.0846098Z   Downloading numexpr-2.11.0-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (9.0 kB)
2025-08-13T18:02:18.1051576Z Collecting formulaic>=0.6 (from glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.1247210Z   Downloading formulaic-1.2.0-py3-none-any.whl.metadata (7.0 kB)
2025-08-13T18:02:18.1987100Z Collecting tabmat>=4.0.0 (from glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.3436578Z   Downloading tabmat-4.1.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.2 kB)
2025-08-13T18:02:18.3616941Z Collecting interface-meta>=1.2.0 (from formulaic>=0.6->glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.3814764Z   Downloading interface_meta-1.3.0-py3-none-any.whl.metadata (6.7 kB)
2025-08-13T18:02:18.4278420Z Collecting narwhals>=1.17 (from formulaic>=0.6->glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.4475472Z   Downloading narwhals-2.1.1-py3-none-any.whl.metadata (11 kB)
2025-08-13T18:02:18.4826089Z Collecting typing-extensions>=4.2.0 (from formulaic>=0.6->glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.5021520Z   Downloading typing_extensions-4.14.1-py3-none-any.whl.metadata (3.0 kB)
2025-08-13T18:02:18.6007710Z Collecting wrapt>=1.17.0rc1 (from formulaic>=0.6->glum>=3.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.6206047Z   Downloading wrapt-2.0.0rc1-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl.metadata (8.8 kB)
2025-08-13T18:02:18.6366710Z Collecting comm>=0.1.1 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.6565091Z   Downloading comm-0.2.3-py3-none-any.whl.metadata (3.7 kB)
2025-08-13T18:02:18.7483850Z Collecting debugpy>=1.6.5 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.7682204Z   Downloading debugpy-1.8.16-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.3 kB)
2025-08-13T18:02:18.8114598Z Collecting ipython>=7.23.1 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.8312700Z   Downloading ipython-9.4.0-py3-none-any.whl.metadata (4.4 kB)
2025-08-13T18:02:18.8628305Z Collecting jupyter-client>=8.0.0 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.8823105Z   Downloading jupyter_client-8.6.3-py3-none-any.whl.metadata (8.3 kB)
2025-08-13T18:02:18.9090658Z Collecting jupyter-core!=5.0.*,>=4.12 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.9285794Z   Downloading jupyter_core-5.8.1-py3-none-any.whl.metadata (1.6 kB)
2025-08-13T18:02:18.9407342Z Collecting matplotlib-inline>=0.1 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.9602110Z   Downloading matplotlib_inline-0.1.7-py3-none-any.whl.metadata (3.9 kB)
2025-08-13T18:02:18.9777905Z Collecting nest-asyncio>=1.4 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:18.9972087Z   Downloading nest_asyncio-1.6.0-py3-none-any.whl.metadata (2.8 kB)
2025-08-13T18:02:19.2276599Z Collecting pyzmq>=25 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.2476671Z   Downloading pyzmq-27.0.1-cp312-abi3-manylinux_2_26_x86_64.manylinux_2_28_x86_64.whl.metadata (6.0 kB)
2025-08-13T18:02:19.2685053Z Collecting traitlets>=5.4.0 (from ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.2882193Z   Downloading traitlets-5.14.3-py3-none-any.whl.metadata (10 kB)
2025-08-13T18:02:19.3087557Z Collecting decorator (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.3284944Z   Downloading decorator-5.2.1-py3-none-any.whl.metadata (3.9 kB)
2025-08-13T18:02:19.3408604Z Collecting ipython-pygments-lexers (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.3604242Z   Downloading ipython_pygments_lexers-1.1.1-py3-none-any.whl.metadata (1.1 kB)
2025-08-13T18:02:19.3771305Z Collecting jedi>=0.16 (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.3966855Z   Downloading jedi-0.19.2-py2.py3-none-any.whl.metadata (22 kB)
2025-08-13T18:02:19.4141739Z Collecting pexpect>4.3 (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.4337523Z   Downloading pexpect-4.9.0-py2.py3-none-any.whl.metadata (2.5 kB)
2025-08-13T18:02:19.4666246Z Collecting prompt_toolkit<3.1.0,>=3.0.41 (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.4864324Z   Downloading prompt_toolkit-3.0.51-py3-none-any.whl.metadata (6.4 kB)
2025-08-13T18:02:19.5067499Z Collecting pygments>=2.4.0 (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.5262094Z   Downloading pygments-2.19.2-py3-none-any.whl.metadata (2.5 kB)
2025-08-13T18:02:19.5388161Z Collecting stack_data (from ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.5581572Z   Downloading stack_data-0.6.3-py3-none-any.whl.metadata (18 kB)
2025-08-13T18:02:19.5772277Z Collecting wcwidth (from prompt_toolkit<3.1.0,>=3.0.41->ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.5966400Z   Downloading wcwidth-0.2.13-py2.py3-none-any.whl.metadata (14 kB)
2025-08-13T18:02:19.6169318Z Collecting parso<0.9.0,>=0.8.4 (from jedi>=0.16->ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.6363644Z   Downloading parso-0.8.4-py2.py3-none-any.whl.metadata (7.7 kB)
2025-08-13T18:02:19.6870407Z Collecting MarkupSafe>=2.0 (from jinja2>=2.10.3->distributed>=2025.1.0->dask-ml>=2025.1.0->easy_glm==0.1.0)
2025-08-13T18:02:19.7065735Z   Downloading MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)
2025-08-13T18:02:19.7450834Z Collecting notebook (from jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.7645425Z   Downloading notebook-7.4.5-py3-none-any.whl.metadata (10 kB)
2025-08-13T18:02:19.7812789Z Collecting jupyter-console (from jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.8008951Z   Downloading jupyter_console-6.6.3-py3-none-any.whl.metadata (5.8 kB)
2025-08-13T18:02:19.8341486Z Collecting nbconvert (from jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.8536167Z   Downloading nbconvert-7.16.6-py3-none-any.whl.metadata (8.5 kB)
2025-08-13T18:02:19.8876139Z Collecting ipywidgets (from jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:19.9071548Z   Downloading ipywidgets-8.1.7-py3-none-any.whl.metadata (2.4 kB)
2025-08-13T18:02:19.9980508Z Collecting jupyterlab (from jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:20.0176043Z   Downloading jupyterlab-4.4.5-py3-none-any.whl.metadata (16 kB)
2025-08-13T18:02:20.0394523Z Collecting python-dateutil>=2.8.2 (from jupyter-client>=8.0.0->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:20.0591816Z   Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)
2025-08-13T18:02:20.1493037Z Collecting contourpy>=1.0.1 (from matplotlib>=3.7.0->easy_glm==0.1.0)
2025-08-13T18:02:20.1688414Z   Downloading contourpy-1.3.3-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (5.5 kB)
2025-08-13T18:02:20.1826713Z Collecting cycler>=0.10 (from matplotlib>=3.7.0->easy_glm==0.1.0)
2025-08-13T18:02:20.2026870Z   Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)
2025-08-13T18:02:20.3385620Z Collecting fonttools>=4.22.0 (from matplotlib>=3.7.0->easy_glm==0.1.0)
2025-08-13T18:02:20.3587858Z   Downloading fonttools-4.59.0-cp313-cp313-manylinux1_x86_64.manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_5_x86_64.whl.metadata (107 kB)
2025-08-13T18:02:20.4381913Z Collecting kiwisolver>=1.3.1 (from matplotlib>=3.7.0->easy_glm==0.1.0)
2025-08-13T18:02:20.4580631Z   Downloading kiwisolver-1.4.9-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (6.3 kB)
2025-08-13T18:02:20.6198176Z Collecting pillow>=8 (from matplotlib>=3.7.0->easy_glm==0.1.0)
2025-08-13T18:02:20.6398058Z   Downloading pillow-11.3.0-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (9.0 kB)
2025-08-13T18:02:20.7452806Z Collecting pyparsing>=2.3.1 (from matplotlib>=3.7.0->easy_glm==0.1.0)
2025-08-13T18:02:20.7649799Z   Downloading pyparsing-3.2.3-py3-none-any.whl.metadata (5.0 kB)
2025-08-13T18:02:20.8033461Z Collecting numpy>=1.24.0 (from easy_glm==0.1.0)
2025-08-13T18:02:20.8229281Z   Downloading numpy-2.2.6-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (62 kB)
2025-08-13T18:02:20.8844462Z Collecting pytz>=2020.1 (from pandas>=2.0.0->easy_glm==0.1.0)
2025-08-13T18:02:20.9043504Z   Downloading pytz-2025.2-py2.py3-none-any.whl.metadata (22 kB)
2025-08-13T18:02:20.9202760Z Collecting tzdata>=2022.7 (from pandas>=2.0.0->easy_glm==0.1.0)
2025-08-13T18:02:20.9397888Z   Downloading tzdata-2025.2-py2.py3-none-any.whl.metadata (1.4 kB)
2025-08-13T18:02:20.9553279Z Collecting ptyprocess>=0.5 (from pexpect>4.3->ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:20.9747747Z   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl.metadata (1.3 kB)
2025-08-13T18:02:21.0009256Z Collecting iniconfig>=1 (from pytest>=7.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.0205382Z   Downloading iniconfig-2.1.0-py3-none-any.whl.metadata (2.7 kB)
2025-08-13T18:02:21.0342275Z Collecting pluggy<2,>=1.5 (from pytest>=7.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.0536722Z   Downloading pluggy-1.6.0-py3-none-any.whl.metadata (4.8 kB)
2025-08-13T18:02:21.3826448Z Collecting coverage>=7.5 (from coverage[toml]>=7.5->pytest-cov>=4.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.4027639Z   Downloading coverage-7.10.3-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl.metadata (8.9 kB)
2025-08-13T18:02:21.4259336Z Collecting six>=1.5 (from python-dateutil>=2.8.2->jupyter-client>=8.0.0->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.4456610Z   Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
2025-08-13T18:02:21.4833870Z Collecting threadpoolctl>=3.1.0 (from scikit-learn>=1.3.0->easy_glm==0.1.0)
2025-08-13T18:02:21.5029170Z   Downloading threadpoolctl-3.6.0-py3-none-any.whl.metadata (13 kB)
2025-08-13T18:02:21.6452891Z Collecting widgetsnbextension~=4.0.14 (from ipywidgets->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.6648850Z   Downloading widgetsnbextension-4.0.14-py3-none-any.whl.metadata (1.6 kB)
2025-08-13T18:02:21.6860554Z Collecting jupyterlab_widgets~=3.0.15 (from ipywidgets->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.7056282Z   Downloading jupyterlab_widgets-3.0.15-py3-none-any.whl.metadata (20 kB)
2025-08-13T18:02:21.7621495Z Collecting async-lru>=1.0.0 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.7816902Z   Downloading async_lru-2.0.5-py3-none-any.whl.metadata (4.5 kB)
2025-08-13T18:02:21.8014391Z Collecting httpx>=0.25.0 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.8209653Z   Downloading httpx-0.28.1-py3-none-any.whl.metadata (7.1 kB)
2025-08-13T18:02:21.8540656Z Collecting jupyter-lsp>=2.0.0 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.8736214Z   Downloading jupyter_lsp-2.2.6-py3-none-any.whl.metadata (1.8 kB)
2025-08-13T18:02:21.9129372Z Collecting jupyter-server<3,>=2.4.0 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.9324460Z   Downloading jupyter_server-2.16.0-py3-none-any.whl.metadata (8.5 kB)
2025-08-13T18:02:21.9626270Z Collecting jupyterlab-server<3,>=2.27.1 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:21.9821629Z   Downloading jupyterlab_server-2.27.3-py3-none-any.whl.metadata (5.9 kB)
2025-08-13T18:02:21.9981556Z Collecting notebook-shim>=0.2 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.0174905Z   Downloading notebook_shim-0.2.4-py3-none-any.whl.metadata (4.0 kB)
2025-08-13T18:02:22.1362065Z Collecting setuptools>=41.1.0 (from jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.1374655Z   Using cached setuptools-80.9.0-py3-none-any.whl.metadata (6.6 kB)
2025-08-13T18:02:22.1669508Z Collecting anyio>=3.1.0 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.1865847Z   Downloading anyio-4.10.0-py3-none-any.whl.metadata (4.0 kB)
2025-08-13T18:02:22.2106499Z Collecting argon2-cffi>=21.1 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.2301745Z   Downloading argon2_cffi-25.1.0-py3-none-any.whl.metadata (4.1 kB)
2025-08-13T18:02:22.2503732Z Collecting jupyter-events>=0.11.0 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.2698479Z   Downloading jupyter_events-0.12.0-py3-none-any.whl.metadata (5.8 kB)
2025-08-13T18:02:22.2836932Z Collecting jupyter-server-terminals>=0.4.4 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.3033824Z   Downloading jupyter_server_terminals-0.5.3-py3-none-any.whl.metadata (5.6 kB)
2025-08-13T18:02:22.3291590Z Collecting nbformat>=5.3.0 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.3488457Z   Downloading nbformat-5.10.4-py3-none-any.whl.metadata (3.6 kB)
2025-08-13T18:02:22.3662045Z Collecting overrides>=5.0 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.3857689Z   Downloading overrides-7.7.0-py3-none-any.whl.metadata (5.8 kB)
2025-08-13T18:02:22.4022584Z Collecting prometheus-client>=0.9 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.4218896Z   Downloading prometheus_client-0.22.1-py3-none-any.whl.metadata (1.9 kB)
2025-08-13T18:02:22.4414981Z Collecting send2trash>=1.8.2 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.4608805Z   Downloading Send2Trash-1.8.3-py3-none-any.whl.metadata (4.0 kB)
2025-08-13T18:02:22.4789275Z Collecting terminado>=0.8.3 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.4987757Z   Downloading terminado-0.18.1-py3-none-any.whl.metadata (5.8 kB)
2025-08-13T18:02:22.5260541Z Collecting websocket-client>=1.7 (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.5456899Z   Downloading websocket_client-1.8.0-py3-none-any.whl.metadata (8.0 kB)
2025-08-13T18:02:22.5653168Z Collecting babel>=2.10 (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.5847145Z   Downloading babel-2.17.0-py3-none-any.whl.metadata (2.0 kB)
2025-08-13T18:02:22.6047664Z Collecting json5>=0.9.0 (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.6242926Z   Downloading json5-0.12.1-py3-none-any.whl.metadata (36 kB)
2025-08-13T18:02:22.6546523Z Collecting jsonschema>=4.18.0 (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.6743409Z   Downloading jsonschema-4.25.0-py3-none-any.whl.metadata (7.7 kB)
2025-08-13T18:02:22.7197778Z Collecting requests>=2.31 (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.7392549Z   Downloading requests-2.32.4-py3-none-any.whl.metadata (4.9 kB)
2025-08-13T18:02:22.7582564Z Collecting idna>=2.8 (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.7777504Z   Downloading idna-3.10-py3-none-any.whl.metadata (10 kB)
2025-08-13T18:02:22.7890741Z Collecting sniffio>=1.1 (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.8087265Z   Downloading sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
2025-08-13T18:02:22.8273260Z Collecting argon2-cffi-bindings (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.8469169Z   Downloading argon2_cffi_bindings-25.1.0-cp39-abi3-manylinux_2_26_x86_64.manylinux_2_28_x86_64.whl.metadata (7.4 kB)
2025-08-13T18:02:22.8758447Z Collecting certifi (from httpx>=0.25.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.8953482Z   Downloading certifi-2025.8.3-py3-none-any.whl.metadata (2.4 kB)
2025-08-13T18:02:22.9156468Z Collecting httpcore==1.* (from httpx>=0.25.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.9357749Z   Downloading httpcore-1.0.9-py3-none-any.whl.metadata (21 kB)
2025-08-13T18:02:22.9528082Z Collecting h11>=0.16 (from httpcore==1.*->httpx>=0.25.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:22.9723197Z   Downloading h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
2025-08-13T18:02:22.9987481Z Collecting attrs>=22.2.0 (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.0183289Z   Downloading attrs-25.3.0-py3-none-any.whl.metadata (10 kB)
2025-08-13T18:02:23.0417296Z Collecting jsonschema-specifications>=2023.03.6 (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.0616698Z   Downloading jsonschema_specifications-2025.4.1-py3-none-any.whl.metadata (2.9 kB)
2025-08-13T18:02:23.0886155Z Collecting referencing>=0.28.4 (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.1082755Z   Downloading referencing-0.36.2-py3-none-any.whl.metadata (2.8 kB)
2025-08-13T18:02:23.3545310Z Collecting rpds-py>=0.7.1 (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.3744993Z   Downloading rpds_py-0.27.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.2 kB)
2025-08-13T18:02:23.4083659Z Collecting python-json-logger>=2.0.4 (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.4279714Z   Downloading python_json_logger-3.3.0-py3-none-any.whl.metadata (4.0 kB)
2025-08-13T18:02:23.4419849Z Collecting rfc3339-validator (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.4615133Z   Downloading rfc3339_validator-0.1.4-py2.py3-none-any.whl.metadata (1.5 kB)
2025-08-13T18:02:23.4714064Z Collecting rfc3986-validator>=0.1.1 (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.4908904Z   Downloading rfc3986_validator-0.1.1-py2.py3-none-any.whl.metadata (1.7 kB)
2025-08-13T18:02:23.5060383Z Collecting fqdn (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.5257402Z   Downloading fqdn-1.5.1-py3-none-any.whl.metadata (1.4 kB)
2025-08-13T18:02:23.5363933Z Collecting isoduration (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.5558839Z   Downloading isoduration-20.11.0-py3-none-any.whl.metadata (5.7 kB)
2025-08-13T18:02:23.5694704Z Collecting jsonpointer>1.13 (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.5889291Z   Downloading jsonpointer-3.0.0-py2.py3-none-any.whl.metadata (2.3 kB)
2025-08-13T18:02:23.6007732Z Collecting rfc3987-syntax>=1.1.0 (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.6204693Z   Downloading rfc3987_syntax-1.1.0-py3-none-any.whl.metadata (7.7 kB)
2025-08-13T18:02:23.6319051Z Collecting uri-template (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.6516463Z   Downloading uri_template-1.3.0-py3-none-any.whl.metadata (8.8 kB)
2025-08-13T18:02:23.6662408Z Collecting webcolors>=24.6.0 (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.6858425Z   Downloading webcolors-24.11.1-py3-none-any.whl.metadata (2.2 kB)
2025-08-13T18:02:23.7305993Z Collecting beautifulsoup4 (from nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.7502692Z   Downloading beautifulsoup4-4.13.4-py3-none-any.whl.metadata (3.8 kB)
2025-08-13T18:02:23.7698367Z Collecting bleach!=5.0.0 (from bleach[css]!=5.0.0->nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.7894371Z   Downloading bleach-6.2.0-py3-none-any.whl.metadata (30 kB)
2025-08-13T18:02:23.8043061Z Collecting defusedxml (from nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.8239143Z   Downloading defusedxml-0.7.1-py2.py3-none-any.whl.metadata (32 kB)
2025-08-13T18:02:23.8533795Z Collecting jupyterlab-pygments (from nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.8729724Z   Downloading jupyterlab_pygments-0.3.0-py3-none-any.whl.metadata (4.4 kB)
2025-08-13T18:02:23.8936256Z Collecting mistune<4,>=2.0.3 (from nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.9131911Z   Downloading mistune-3.1.3-py3-none-any.whl.metadata (1.8 kB)
2025-08-13T18:02:23.9347199Z Collecting nbclient>=0.5.0 (from nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.9543681Z   Downloading nbclient-0.10.2-py3-none-any.whl.metadata (8.3 kB)
2025-08-13T18:02:23.9792140Z Collecting pandocfilters>=1.4.1 (from nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:23.9987764Z   Downloading pandocfilters-1.5.1-py2.py3-none-any.whl.metadata (9.0 kB)
2025-08-13T18:02:24.0293260Z Collecting webencodings (from bleach!=5.0.0->bleach[css]!=5.0.0->nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.0488869Z   Downloading webencodings-0.5.1-py2.py3-none-any.whl.metadata (2.1 kB)
2025-08-13T18:02:24.0692395Z Collecting tinycss2<1.5,>=1.1.0 (from bleach[css]!=5.0.0->nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.0891808Z   Downloading tinycss2-1.4.0-py3-none-any.whl.metadata (3.0 kB)
2025-08-13T18:02:24.1295615Z Collecting fastjsonschema>=2.15 (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.1490690Z   Downloading fastjsonschema-2.21.1-py3-none-any.whl.metadata (2.2 kB)
2025-08-13T18:02:24.2697068Z Collecting charset_normalizer<4,>=2 (from requests>=2.31->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.2897187Z   Downloading charset_normalizer-3.4.3-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl.metadata (36 kB)
2025-08-13T18:02:24.3397575Z Collecting lark>=1.2.2 (from rfc3987-syntax>=1.1.0->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.3591996Z   Downloading lark-1.2.2-py3-none-any.whl.metadata (1.8 kB)
2025-08-13T18:02:24.5022066Z Collecting cffi>=1.0.1 (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.5220113Z   Downloading cffi-1.17.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)
2025-08-13T18:02:24.5390479Z Collecting pycparser (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.5586186Z   Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)
2025-08-13T18:02:24.5804563Z Collecting soupsieve>1.2 (from beautifulsoup4->nbconvert->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.5998780Z   Downloading soupsieve-2.7-py3-none-any.whl.metadata (4.6 kB)
2025-08-13T18:02:24.6399984Z Collecting arrow>=0.15.0 (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.6595563Z   Downloading arrow-1.3.0-py3-none-any.whl.metadata (7.5 kB)
2025-08-13T18:02:24.6849377Z Collecting types-python-dateutil>=2.8.10 (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.7046181Z   Downloading types_python_dateutil-2.9.0.20250809-py3-none-any.whl.metadata (1.8 kB)
2025-08-13T18:02:24.7829982Z Collecting executing>=1.2.0 (from stack_data->ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.8023540Z   Downloading executing-2.2.0-py2.py3-none-any.whl.metadata (8.9 kB)
2025-08-13T18:02:24.8315500Z Collecting asttokens>=2.1.0 (from stack_data->ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.8510385Z   Downloading asttokens-3.0.0-py3-none-any.whl.metadata (4.7 kB)
2025-08-13T18:02:24.8660098Z Collecting pure-eval (from stack_data->ipython>=7.23.1->ipykernel>=6.0.0->easy_glm==0.1.0)
2025-08-13T18:02:24.8855596Z   Downloading pure_eval-0.2.3-py3-none-any.whl.metadata (6.3 kB)
2025-08-13T18:02:24.9280092Z Downloading black-25.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (1.8 MB)
2025-08-13T18:02:24.9898461Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.8/1.8 MB 36.7 MB/s  0:00:00
2025-08-13T18:02:25.0095227Z Downloading click-8.2.1-py3-none-any.whl (102 kB)
2025-08-13T18:02:25.0322577Z Downloading dask_ml-2025.1.0-py3-none-any.whl (149 kB)
2025-08-13T18:02:25.0548329Z Downloading dask-2025.7.0-py3-none-any.whl (1.5 MB)
2025-08-13T18:02:25.0663884Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 138.3 MB/s  0:00:00
2025-08-13T18:02:25.0861293Z Downloading cloudpickle-3.1.1-py3-none-any.whl (20 kB)
2025-08-13T18:02:25.1079319Z Downloading dask_glm-0.3.2-py2.py3-none-any.whl (13 kB)
2025-08-13T18:02:25.1298033Z Downloading distributed-2025.7.0-py3-none-any.whl (1.0 MB)
2025-08-13T18:02:25.1393680Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.0/1.0 MB 112.0 MB/s  0:00:00
2025-08-13T18:02:25.1591618Z Downloading duckdb-1.3.2-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (21.1 MB)
2025-08-13T18:02:25.2813168Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 21.1/21.1 MB 174.5 MB/s  0:00:00
2025-08-13T18:02:25.3010327Z Downloading fsspec-2025.7.0-py3-none-any.whl (199 kB)
2025-08-13T18:02:25.3486161Z Downloading glum-3.1.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.4 MB)
2025-08-13T18:02:25.4845369Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.4/3.4 MB 23.6 MB/s  0:00:00
2025-08-13T18:02:25.5042660Z Downloading formulaic-1.2.0-py3-none-any.whl (117 kB)
2025-08-13T18:02:25.5257964Z Downloading interface_meta-1.3.0-py3-none-any.whl (14 kB)
2025-08-13T18:02:25.5472405Z Downloading ipykernel-6.30.1-py3-none-any.whl (117 kB)
2025-08-13T18:02:25.5689291Z Downloading comm-0.2.3-py3-none-any.whl (7.3 kB)
2025-08-13T18:02:25.5904872Z Downloading debugpy-1.8.16-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.2 MB)
2025-08-13T18:02:25.6126894Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.2/4.2 MB 203.8 MB/s  0:00:00
2025-08-13T18:02:25.6324392Z Downloading ipython-9.4.0-py3-none-any.whl (611 kB)
2025-08-13T18:02:25.6383953Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 611.0/611.0 kB 100.5 MB/s  0:00:00
2025-08-13T18:02:25.6580322Z Downloading prompt_toolkit-3.0.51-py3-none-any.whl (387 kB)
2025-08-13T18:02:25.6811600Z Downloading jedi-0.19.2-py2.py3-none-any.whl (1.6 MB)
2025-08-13T18:02:25.6927022Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.6/1.6 MB 149.1 MB/s  0:00:00
2025-08-13T18:02:25.7124390Z Downloading parso-0.8.4-py2.py3-none-any.whl (103 kB)
2025-08-13T18:02:25.7341470Z Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)
2025-08-13T18:02:25.7564587Z Downloading jupyter-1.1.1-py2.py3-none-any.whl (2.7 kB)
2025-08-13T18:02:25.7778359Z Downloading jupyter_client-8.6.3-py3-none-any.whl (106 kB)
2025-08-13T18:02:25.7993368Z Downloading jupyter_core-5.8.1-py3-none-any.whl (28 kB)
2025-08-13T18:02:25.8208368Z Downloading llvmlite-0.44.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (42.4 MB)
2025-08-13T18:02:26.0555808Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 42.4/42.4 MB 181.6 MB/s  0:00:00
2025-08-13T18:02:26.0752878Z Downloading locket-1.0.0-py2.py3-none-any.whl (4.4 kB)
2025-08-13T18:02:26.0969932Z Downloading MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (23 kB)
2025-08-13T18:02:26.1197639Z Downloading matplotlib-3.10.5-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (8.7 MB)
2025-08-13T18:02:26.1692192Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.7/8.7 MB 178.9 MB/s  0:00:00
2025-08-13T18:02:26.1889261Z Downloading contourpy-1.3.3-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (362 kB)
2025-08-13T18:02:26.2121288Z Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)
2025-08-13T18:02:26.2339755Z Downloading fonttools-4.59.0-cp313-cp313-manylinux1_x86_64.manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_5_x86_64.whl (4.9 MB)
2025-08-13T18:02:26.2633152Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.9/4.9 MB 171.0 MB/s  0:00:00
2025-08-13T18:02:26.2830332Z Downloading kiwisolver-1.4.9-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (1.5 MB)
2025-08-13T18:02:26.2931914Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 161.4 MB/s  0:00:00
2025-08-13T18:02:26.3128097Z Downloading matplotlib_inline-0.1.7-py3-none-any.whl (9.9 kB)
2025-08-13T18:02:26.3344916Z Downloading msgpack-1.1.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (423 kB)
2025-08-13T18:02:26.3577173Z Downloading multipledispatch-1.0.0-py3-none-any.whl (12 kB)
2025-08-13T18:02:26.3791253Z Downloading mypy_extensions-1.1.0-py3-none-any.whl (5.0 kB)
2025-08-13T18:02:26.4003609Z Downloading narwhals-2.1.1-py3-none-any.whl (389 kB)
2025-08-13T18:02:26.4232384Z Downloading nest_asyncio-1.6.0-py3-none-any.whl (5.2 kB)
2025-08-13T18:02:26.4446780Z Downloading numba-0.61.2-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (3.9 MB)
2025-08-13T18:02:26.4652031Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.9/3.9 MB 202.8 MB/s  0:00:00
2025-08-13T18:02:26.4849279Z Downloading numpy-2.2.6-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.5 MB)
2025-08-13T18:02:26.5749445Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.5/16.5 MB 185.6 MB/s  0:00:00
2025-08-13T18:02:26.5946453Z Downloading packaging-25.0-py3-none-any.whl (66 kB)
2025-08-13T18:02:26.6168339Z Downloading pandas-2.3.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
2025-08-13T18:02:26.6866351Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.1/12.1 MB 175.0 MB/s  0:00:00
2025-08-13T18:02:26.7064476Z Downloading partd-1.4.2-py3-none-any.whl (18 kB)
2025-08-13T18:02:26.7283559Z Downloading pathspec-0.12.1-py3-none-any.whl (31 kB)
2025-08-13T18:02:26.7515595Z Downloading pexpect-4.9.0-py2.py3-none-any.whl (63 kB)
2025-08-13T18:02:26.7734110Z Downloading pillow-11.3.0-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (6.6 MB)
2025-08-13T18:02:26.8115042Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.6/6.6 MB 184.6 MB/s  0:00:00
2025-08-13T18:02:26.8313689Z Downloading platformdirs-4.3.8-py3-none-any.whl (18 kB)
2025-08-13T18:02:26.8546545Z Downloading polars-1.32.2-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (38.3 MB)
2025-08-13T18:02:27.0763349Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 38.3/38.3 MB 173.5 MB/s  0:00:00
2025-08-13T18:02:27.0963105Z Downloading psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (277 kB)
2025-08-13T18:02:27.1187277Z Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
2025-08-13T18:02:27.1402070Z Downloading pyarrow-21.0.0-cp313-cp313-manylinux_2_28_x86_64.whl (42.8 MB)
2025-08-13T18:02:27.3748110Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 42.8/42.8 MB 183.4 MB/s  0:00:00
2025-08-13T18:02:27.3946241Z Downloading pygments-2.19.2-py3-none-any.whl (1.2 MB)
2025-08-13T18:02:27.4046832Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 123.2 MB/s  0:00:00
2025-08-13T18:02:27.4244126Z Downloading pyparsing-3.2.3-py3-none-any.whl (111 kB)
2025-08-13T18:02:27.4467220Z Downloading pytest-8.4.1-py3-none-any.whl (365 kB)
2025-08-13T18:02:27.4694549Z Downloading pluggy-1.6.0-py3-none-any.whl (20 kB)
2025-08-13T18:02:27.4921706Z Downloading iniconfig-2.1.0-py3-none-any.whl (6.0 kB)
2025-08-13T18:02:27.5135846Z Downloading pytest_cov-6.2.1-py3-none-any.whl (24 kB)
2025-08-13T18:02:27.5356468Z Downloading coverage-7.10.3-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl (250 kB)
2025-08-13T18:02:27.5579631Z Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
2025-08-13T18:02:27.5800208Z Downloading pytz-2025.2-py2.py3-none-any.whl (509 kB)
2025-08-13T18:02:27.6037301Z Downloading PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (759 kB)
2025-08-13T18:02:27.6098939Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 759.5/759.5 kB 128.2 MB/s  0:00:00
2025-08-13T18:02:27.6298497Z Downloading pyzmq-27.0.1-cp312-abi3-manylinux_2_26_x86_64.manylinux_2_28_x86_64.whl (839 kB)
2025-08-13T18:02:27.6360514Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 839.8/839.8 kB 144.1 MB/s  0:00:00
2025-08-13T18:02:27.6557187Z Downloading ruff-0.12.8-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.8 MB)
2025-08-13T18:02:27.7302362Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.8/12.8 MB 174.5 MB/s  0:00:00
2025-08-13T18:02:27.7503273Z Downloading scikit_learn-1.7.1-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (9.4 MB)
2025-08-13T18:02:27.8057867Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.4/9.4 MB 173.9 MB/s  0:00:00
2025-08-13T18:02:27.8255538Z Downloading joblib-1.5.1-py3-none-any.whl (307 kB)
2025-08-13T18:02:27.8483224Z Downloading scipy-1.16.1-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (35.2 MB)
2025-08-13T18:02:28.0423569Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 35.2/35.2 MB 182.5 MB/s  0:00:00
2025-08-13T18:02:28.0622752Z Downloading seaborn-0.13.2-py3-none-any.whl (294 kB)
2025-08-13T18:02:28.0884850Z Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
2025-08-13T18:02:28.1099396Z Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)
2025-08-13T18:02:28.1314661Z Downloading sparse-0.17.0-py2.py3-none-any.whl (259 kB)
2025-08-13T18:02:28.1772729Z Downloading tabmat-4.1.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.5 MB)
2025-08-13T18:02:28.6120472Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 7.5/7.5 MB 16.7 MB/s  0:00:00
2025-08-13T18:02:28.6317195Z Downloading tblib-3.1.0-py3-none-any.whl (12 kB)
2025-08-13T18:02:28.6537909Z Downloading threadpoolctl-3.6.0-py3-none-any.whl (18 kB)
2025-08-13T18:02:28.6751818Z Downloading toolz-1.0.0-py3-none-any.whl (56 kB)
2025-08-13T18:02:28.6979590Z Downloading tornado-6.5.2-cp39-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (443 kB)
2025-08-13T18:02:28.7248013Z Downloading traitlets-5.14.3-py3-none-any.whl (85 kB)
2025-08-13T18:02:28.7466536Z Downloading typing_extensions-4.14.1-py3-none-any.whl (43 kB)
2025-08-13T18:02:28.7680025Z Downloading tzdata-2025.2-py2.py3-none-any.whl (347 kB)
2025-08-13T18:02:28.7906867Z Downloading urllib3-2.5.0-py3-none-any.whl (129 kB)
2025-08-13T18:02:28.8129747Z Downloading wrapt-2.0.0rc1-cp313-cp313-manylinux1_x86_64.manylinux_2_28_x86_64.manylinux_2_5_x86_64.whl (102 kB)
2025-08-13T18:02:28.8346437Z Downloading zict-3.0.0-py2.py3-none-any.whl (43 kB)
2025-08-13T18:02:28.8559100Z Downloading decorator-5.2.1-py3-none-any.whl (9.2 kB)
2025-08-13T18:02:28.8774851Z Downloading ipython_pygments_lexers-1.1.1-py3-none-any.whl (8.1 kB)
2025-08-13T18:02:28.8992025Z Downloading ipywidgets-8.1.7-py3-none-any.whl (139 kB)
2025-08-13T18:02:28.9210873Z Downloading jupyterlab_widgets-3.0.15-py3-none-any.whl (216 kB)
2025-08-13T18:02:28.9433723Z Downloading widgetsnbextension-4.0.14-py3-none-any.whl (2.2 MB)
2025-08-13T18:02:28.9557693Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.2/2.2 MB 193.5 MB/s  0:00:00
2025-08-13T18:02:28.9752812Z Downloading jupyter_console-6.6.3-py3-none-any.whl (24 kB)
2025-08-13T18:02:28.9968788Z Downloading jupyterlab-4.4.5-py3-none-any.whl (12.3 MB)
2025-08-13T18:02:29.0844061Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.3/12.3 MB 141.2 MB/s  0:00:00
2025-08-13T18:02:29.1051178Z Downloading jupyter_server-2.16.0-py3-none-any.whl (386 kB)
2025-08-13T18:02:29.1283533Z Downloading jupyterlab_server-2.27.3-py3-none-any.whl (59 kB)
2025-08-13T18:02:29.1510864Z Downloading anyio-4.10.0-py3-none-any.whl (107 kB)
2025-08-13T18:02:29.1728167Z Downloading argon2_cffi-25.1.0-py3-none-any.whl (14 kB)
2025-08-13T18:02:29.1944780Z Downloading async_lru-2.0.5-py3-none-any.whl (6.1 kB)
2025-08-13T18:02:29.2163225Z Downloading babel-2.17.0-py3-none-any.whl (10.2 MB)
2025-08-13T18:02:29.2766009Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.2/10.2 MB 172.2 MB/s  0:00:00
2025-08-13T18:02:29.2964177Z Downloading httpx-0.28.1-py3-none-any.whl (73 kB)
2025-08-13T18:02:29.3346123Z Downloading httpcore-1.0.9-py3-none-any.whl (78 kB)
2025-08-13T18:02:29.3565978Z Downloading h11-0.16.0-py3-none-any.whl (37 kB)
2025-08-13T18:02:29.3781216Z Downloading idna-3.10-py3-none-any.whl (70 kB)
2025-08-13T18:02:29.3996546Z Downloading json5-0.12.1-py3-none-any.whl (36 kB)
2025-08-13T18:02:29.4215064Z Downloading jsonschema-4.25.0-py3-none-any.whl (89 kB)
2025-08-13T18:02:29.4430749Z Downloading attrs-25.3.0-py3-none-any.whl (63 kB)
2025-08-13T18:02:29.4648074Z Downloading jsonschema_specifications-2025.4.1-py3-none-any.whl (18 kB)
2025-08-13T18:02:29.4860653Z Downloading jupyter_events-0.12.0-py3-none-any.whl (19 kB)
2025-08-13T18:02:29.5076539Z Downloading jsonpointer-3.0.0-py2.py3-none-any.whl (7.6 kB)
2025-08-13T18:02:29.5291494Z Downloading jupyter_lsp-2.2.6-py3-none-any.whl (69 kB)
2025-08-13T18:02:29.5524108Z Downloading jupyter_server_terminals-0.5.3-py3-none-any.whl (13 kB)
2025-08-13T18:02:29.5742501Z Downloading nbconvert-7.16.6-py3-none-any.whl (258 kB)
2025-08-13T18:02:29.5975019Z Downloading mistune-3.1.3-py3-none-any.whl (53 kB)
2025-08-13T18:02:29.6195821Z Downloading bleach-6.2.0-py3-none-any.whl (163 kB)
2025-08-13T18:02:29.6417476Z Downloading tinycss2-1.4.0-py3-none-any.whl (26 kB)
2025-08-13T18:02:29.6635869Z Downloading nbclient-0.10.2-py3-none-any.whl (25 kB)
2025-08-13T18:02:29.6852667Z Downloading nbformat-5.10.4-py3-none-any.whl (78 kB)
2025-08-13T18:02:29.7069673Z Downloading fastjsonschema-2.21.1-py3-none-any.whl (23 kB)
2025-08-13T18:02:29.7288479Z Downloading notebook_shim-0.2.4-py3-none-any.whl (13 kB)
2025-08-13T18:02:29.7505237Z Downloading overrides-7.7.0-py3-none-any.whl (17 kB)
2025-08-13T18:02:29.7721571Z Downloading pandocfilters-1.5.1-py2.py3-none-any.whl (8.7 kB)
2025-08-13T18:02:29.7936169Z Downloading prometheus_client-0.22.1-py3-none-any.whl (58 kB)
2025-08-13T18:02:29.8159936Z Downloading python_json_logger-3.3.0-py3-none-any.whl (15 kB)
2025-08-13T18:02:29.8371171Z Downloading referencing-0.36.2-py3-none-any.whl (26 kB)
2025-08-13T18:02:29.8602210Z Downloading requests-2.32.4-py3-none-any.whl (64 kB)
2025-08-13T18:02:29.8823277Z Downloading charset_normalizer-3.4.3-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl (151 kB)
2025-08-13T18:02:29.9042137Z Downloading certifi-2025.8.3-py3-none-any.whl (161 kB)
2025-08-13T18:02:29.9262612Z Downloading rfc3986_validator-0.1.1-py2.py3-none-any.whl (4.2 kB)
2025-08-13T18:02:29.9480164Z Downloading rfc3987_syntax-1.1.0-py3-none-any.whl (8.0 kB)
2025-08-13T18:02:29.9699360Z Downloading lark-1.2.2-py3-none-any.whl (111 kB)
2025-08-13T18:02:29.9922215Z Downloading rpds_py-0.27.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (385 kB)
2025-08-13T18:02:30.0150553Z Downloading Send2Trash-1.8.3-py3-none-any.whl (18 kB)
2025-08-13T18:02:30.0179898Z Using cached setuptools-80.9.0-py3-none-any.whl (1.2 MB)
2025-08-13T18:02:30.0384166Z Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)
2025-08-13T18:02:30.0602429Z Downloading terminado-0.18.1-py3-none-any.whl (14 kB)
2025-08-13T18:02:30.0819638Z Downloading webcolors-24.11.1-py3-none-any.whl (14 kB)
2025-08-13T18:02:30.1037808Z Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)
2025-08-13T18:02:30.1252712Z Downloading websocket_client-1.8.0-py3-none-any.whl (58 kB)
2025-08-13T18:02:30.1472030Z Downloading argon2_cffi_bindings-25.1.0-cp39-abi3-manylinux_2_26_x86_64.manylinux_2_28_x86_64.whl (87 kB)
2025-08-13T18:02:30.1694097Z Downloading cffi-1.17.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (479 kB)
2025-08-13T18:02:30.1928207Z Downloading beautifulsoup4-4.13.4-py3-none-any.whl (187 kB)
2025-08-13T18:02:30.2165323Z Downloading soupsieve-2.7-py3-none-any.whl (36 kB)
2025-08-13T18:02:30.2380675Z Downloading defusedxml-0.7.1-py2.py3-none-any.whl (25 kB)
2025-08-13T18:02:30.2648289Z Downloading fqdn-1.5.1-py3-none-any.whl (9.1 kB)
2025-08-13T18:02:30.3282143Z Downloading isoduration-20.11.0-py3-none-any.whl (11 kB)
2025-08-13T18:02:30.3497089Z Downloading arrow-1.3.0-py3-none-any.whl (66 kB)
2025-08-13T18:02:30.3714534Z Downloading types_python_dateutil-2.9.0.20250809-py3-none-any.whl (17 kB)
2025-08-13T18:02:30.3926929Z Downloading jupyterlab_pygments-0.3.0-py3-none-any.whl (15 kB)
2025-08-13T18:02:30.4140860Z Downloading notebook-7.4.5-py3-none-any.whl (14.3 MB)
2025-08-13T18:02:30.4972029Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 14.3/14.3 MB 175.4 MB/s  0:00:00
2025-08-13T18:02:30.5172593Z Downloading numexpr-2.11.0-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (406 kB)
2025-08-13T18:02:30.5401884Z Downloading pycparser-2.22-py3-none-any.whl (117 kB)
2025-08-13T18:02:30.5619708Z Downloading rfc3339_validator-0.1.4-py2.py3-none-any.whl (3.5 kB)
2025-08-13T18:02:30.5833896Z Downloading stack_data-0.6.3-py3-none-any.whl (24 kB)
2025-08-13T18:02:30.6045782Z Downloading asttokens-3.0.0-py3-none-any.whl (26 kB)
2025-08-13T18:02:30.6265610Z Downloading executing-2.2.0-py2.py3-none-any.whl (26 kB)
2025-08-13T18:02:30.6485956Z Downloading pure_eval-0.2.3-py3-none-any.whl (11 kB)
2025-08-13T18:02:30.6699084Z Downloading uri_template-1.3.0-py3-none-any.whl (11 kB)
2025-08-13T18:02:30.6914123Z Downloading wcwidth-0.2.13-py2.py3-none-any.whl (34 kB)
2025-08-13T18:02:31.0944023Z Building wheels for collected packages: easy_glm
2025-08-13T18:02:31.0952988Z   Building wheel for easy_glm (pyproject.toml): started
2025-08-13T18:02:31.3150187Z   Building wheel for easy_glm (pyproject.toml): finished with status 'done'
2025-08-13T18:02:31.3156355Z   Created wheel for easy_glm: filename=easy_glm-0.1.0-py3-none-any.whl size=13870 sha256=0a911acb4eea54d2571e41833ebe4b7b313b35d024f7a22e8fad167da077410e
2025-08-13T18:02:31.3158152Z   Stored in directory: /tmp/pip-ephem-wheel-cache-b6438tqq/wheels/73/78/6a/8d104b3da6da5a372b1a2d210fd1734acd92728f1a92586085
2025-08-13T18:02:31.3182860Z Successfully built easy_glm
2025-08-13T18:02:31.6490475Z Installing collected packages: webencodings, wcwidth, sortedcontainers, pytz, pure-eval, ptyprocess, multipledispatch, fastjsonschema, zict, wrapt, widgetsnbextension, websocket-client, webcolors, urllib3, uri-template, tzdata, typing-extensions, types-python-dateutil, traitlets, tornado, toolz, tinycss2, threadpoolctl, tblib, soupsieve, sniffio, six, setuptools, send2trash, ruff, rpds-py, rfc3986-validator, pyzmq, pyyaml, python-json-logger, pyparsing, pygments, pycparser, pyarrow, psutil, prompt_toolkit, prometheus-client, polars, pluggy, platformdirs, pillow, pexpect, pathspec, parso, pandocfilters, packaging, overrides, numpy, nest-asyncio, narwhals, mypy-extensions, msgpack, mistune, MarkupSafe, locket, llvmlite, lark, kiwisolver, jupyterlab_widgets, jupyterlab-pygments, jsonpointer, json5, joblib, interface-meta, iniconfig, idna, h11, fsspec, fqdn, fonttools, executing, duckdb, defusedxml, decorator, debugpy, cycler, coverage, comm, cloudpickle, click, charset_normalizer, certifi, bleach, babel, attrs, async-lru, asttokens, terminado, stack_data, scipy, rfc3987-syntax, rfc3339-validator, requests, referencing, python-dateutil, pytest, partd, numexpr, numba, matplotlib-inline, jupyter-core, jinja2, jedi, ipython-pygments-lexers, httpcore, contourpy, cffi, black, beautifulsoup4, anyio, sparse, scikit-learn, pytest-cov, pandas, matplotlib, jupyter-server-terminals, jupyter-client, jsonschema-specifications, ipython, httpx, dask, arrow, argon2-cffi-bindings, seaborn, jsonschema, isoduration, ipywidgets, ipykernel, formulaic, distributed, argon2-cffi, tabmat, nbformat, jupyter-console, dask-glm, nbclient, jupyter-events, glum, dask-ml, nbconvert, easy_glm, jupyter-server, notebook-shim, jupyterlab-server, jupyter-lsp, jupyterlab, notebook, jupyter
2025-08-13T18:03:04.3381289Z 
2025-08-13T18:03:04.3545105Z Successfully installed MarkupSafe-3.0.2 anyio-4.10.0 argon2-cffi-25.1.0 argon2-cffi-bindings-25.1.0 arrow-1.3.0 asttokens-3.0.0 async-lru-2.0.5 attrs-25.3.0 babel-2.17.0 beautifulsoup4-4.13.4 black-25.1.0 bleach-6.2.0 certifi-2025.8.3 cffi-1.17.1 charset_normalizer-3.4.3 click-8.2.1 cloudpickle-3.1.1 comm-0.2.3 contourpy-1.3.3 coverage-7.10.3 cycler-0.12.1 dask-2025.7.0 dask-glm-0.3.2 dask-ml-2025.1.0 debugpy-1.8.16 decorator-5.2.1 defusedxml-0.7.1 distributed-2025.7.0 duckdb-1.3.2 easy_glm-0.1.0 executing-2.2.0 fastjsonschema-2.21.1 fonttools-4.59.0 formulaic-1.2.0 fqdn-1.5.1 fsspec-2025.7.0 glum-3.1.2 h11-0.16.0 httpcore-1.0.9 httpx-0.28.1 idna-3.10 iniconfig-2.1.0 interface-meta-1.3.0 ipykernel-6.30.1 ipython-9.4.0 ipython-pygments-lexers-1.1.1 ipywidgets-8.1.7 isoduration-20.11.0 jedi-0.19.2 jinja2-3.1.6 joblib-1.5.1 json5-0.12.1 jsonpointer-3.0.0 jsonschema-4.25.0 jsonschema-specifications-2025.4.1 jupyter-1.1.1 jupyter-client-8.6.3 jupyter-console-6.6.3 jupyter-core-5.8.1 jupyter-events-0.12.0 jupyter-lsp-2.2.6 jupyter-server-2.16.0 jupyter-server-terminals-0.5.3 jupyterlab-4.4.5 jupyterlab-pygments-0.3.0 jupyterlab-server-2.27.3 jupyterlab_widgets-3.0.15 kiwisolver-1.4.9 lark-1.2.2 llvmlite-0.44.0 locket-1.0.0 matplotlib-3.10.5 matplotlib-inline-0.1.7 mistune-3.1.3 msgpack-1.1.1 multipledispatch-1.0.0 mypy-extensions-1.1.0 narwhals-2.1.1 nbclient-0.10.2 nbconvert-7.16.6 nbformat-5.10.4 nest-asyncio-1.6.0 notebook-7.4.5 notebook-shim-0.2.4 numba-0.61.2 numexpr-2.11.0 numpy-2.2.6 overrides-7.7.0 packaging-25.0 pandas-2.3.1 pandocfilters-1.5.1 parso-0.8.4 partd-1.4.2 pathspec-0.12.1 pexpect-4.9.0 pillow-11.3.0 platformdirs-4.3.8 pluggy-1.6.0 polars-1.32.2 prometheus-client-0.22.1 prompt_toolkit-3.0.51 psutil-7.0.0 ptyprocess-0.7.0 pure-eval-0.2.3 pyarrow-21.0.0 pycparser-2.22 pygments-2.19.2 pyparsing-3.2.3 pytest-8.4.1 pytest-cov-6.2.1 python-dateutil-2.9.0.post0 python-json-logger-3.3.0 pytz-2025.2 pyyaml-6.0.2 pyzmq-27.0.1 referencing-0.36.2 requests-2.32.4 rfc3339-validator-0.1.4 rfc3986-validator-0.1.1 rfc3987-syntax-1.1.0 rpds-py-0.27.0 ruff-0.12.8 scikit-learn-1.7.1 scipy-1.16.1 seaborn-0.13.2 send2trash-1.8.3 setuptools-80.9.0 six-1.17.0 sniffio-1.3.1 sortedcontainers-2.4.0 soupsieve-2.7 sparse-0.17.0 stack_data-0.6.3 tabmat-4.1.2 tblib-3.1.0 terminado-0.18.1 threadpoolctl-3.6.0 tinycss2-1.4.0 toolz-1.0.0 tornado-6.5.2 traitlets-5.14.3 types-python-dateutil-2.9.0.20250809 typing-extensions-4.14.1 tzdata-2025.2 uri-template-1.3.0 urllib3-2.5.0 wcwidth-0.2.13 webcolors-24.11.1 webencodings-0.5.1 websocket-client-1.8.0 widgetsnbextension-4.0.14 wrapt-2.0.0rc1 zict-3.0.0
2025-08-13T18:03:05.1716677Z ##[group]Run ruff check .
2025-08-13T18:03:05.1716946Z [36;1mruff check .[0m
2025-08-13T18:03:05.1757170Z shell: /usr/bin/bash -e {0}
2025-08-13T18:03:05.1757389Z env:
2025-08-13T18:03:05.1757624Z   pythonLocation: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.1758019Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib/pkgconfig
2025-08-13T18:03:05.1758392Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.1758727Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.1759052Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.1759374Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib
2025-08-13T18:03:05.1759658Z   EASY_GLM_MAX_ROWS: 500
2025-08-13T18:03:05.1759840Z ##[endgroup]
2025-08-13T18:03:05.1867887Z warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:
2025-08-13T18:03:05.1869005Z   - 'ignore' -> 'lint.ignore'
2025-08-13T18:03:05.1869420Z   - 'select' -> 'lint.select'
2025-08-13T18:03:05.1942133Z __init__.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.1942634Z    |
2025-08-13T18:03:05.1942958Z  1 | / from .core.prepare import prepare_data
2025-08-13T18:03:05.1943282Z  2 | | from .core.model import fit_lasso_glm
2025-08-13T18:03:05.1943571Z  3 | | from .core.blueprint import generate_blueprint
2025-08-13T18:03:05.1944007Z  4 | | from .core.transforms import lump_rare_levels_pl, lump_fun, o_matrix
2025-08-13T18:03:05.1944680Z  5 | | from .core.data import load_external_dataframe
2025-08-13T18:03:05.1945206Z  6 | | from .core.ratetable import ratetable
2025-08-13T18:03:05.1945764Z  7 | | from .core.all_ratetables import generate_all_ratetables
2025-08-13T18:03:05.1946363Z  8 | | from .core.plots import plot_all_ratetables
2025-08-13T18:03:05.1946838Z    | |___________________________________________^ I001
2025-08-13T18:03:05.1947263Z  9 |
2025-08-13T18:03:05.1947527Z 10 |   __all__ = [
2025-08-13T18:03:05.1947821Z    |
2025-08-13T18:03:05.1948095Z    = help: Organize imports
2025-08-13T18:03:05.1948330Z 
2025-08-13T18:03:05.1948684Z core/all_ratetables.py:1:1: UP035 [*] Import from `collections.abc` instead: `Callable`
2025-08-13T18:03:05.1949290Z   |
2025-08-13T18:03:05.1949595Z 1 | from typing import Dict, Any, List, Callable
2025-08-13T18:03:05.1950116Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.1950579Z 2 | import polars as pl
2025-08-13T18:03:05.1951197Z 3 | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.1951674Z   |
2025-08-13T18:03:05.1951978Z   = help: Import from `collections.abc`
2025-08-13T18:03:05.1952281Z 
2025-08-13T18:03:05.1952620Z core/all_ratetables.py:1:1: UP035 `typing.Dict` is deprecated, use `dict` instead
2025-08-13T18:03:05.1953209Z   |
2025-08-13T18:03:05.1953524Z 1 | from typing import Dict, Any, List, Callable
2025-08-13T18:03:05.1953989Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.1954393Z 2 | import polars as pl
2025-08-13T18:03:05.1954783Z 3 | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.1955209Z   |
2025-08-13T18:03:05.1955533Z 
2025-08-13T18:03:05.1955861Z core/all_ratetables.py:1:1: UP035 `typing.List` is deprecated, use `list` instead
2025-08-13T18:03:05.1956437Z   |
2025-08-13T18:03:05.1956736Z 1 | from typing import Dict, Any, List, Callable
2025-08-13T18:03:05.1957180Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.1957578Z 2 | import polars as pl
2025-08-13T18:03:05.1957962Z 3 | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.1958386Z   |
2025-08-13T18:03:05.1958523Z 
2025-08-13T18:03:05.1958831Z core/all_ratetables.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.1959646Z   |
2025-08-13T18:03:05.1959955Z 1 | / from typing import Dict, Any, List, Callable
2025-08-13T18:03:05.1960392Z 2 | | import polars as pl
2025-08-13T18:03:05.1961170Z 3 | | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.1961684Z 4 | | from .prepare import prepare_data
2025-08-13T18:03:05.1962109Z 5 | | from .ratetable import ratetable
2025-08-13T18:03:05.1962512Z   | |________________________________^ I001
2025-08-13T18:03:05.1962865Z 6 |
2025-08-13T18:03:05.1963138Z 7 |   def generate_all_ratetables(
2025-08-13T18:03:05.1963485Z   |
2025-08-13T18:03:05.1963747Z   = help: Organize imports
2025-08-13T18:03:05.1963969Z 
2025-08-13T18:03:05.1964266Z core/all_ratetables.py:1:37: F401 [*] `typing.Callable` imported but unused
2025-08-13T18:03:05.1964818Z   |
2025-08-13T18:03:05.1965125Z 1 | from typing import Dict, Any, List, Callable
2025-08-13T18:03:05.1965563Z   |                                     ^^^^^^^^ F401
2025-08-13T18:03:05.1965867Z 2 | import polars as pl
2025-08-13T18:03:05.1966096Z 3 | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.1966336Z   |
2025-08-13T18:03:05.1966523Z   = help: Remove unused import: `typing.Callable`
2025-08-13T18:03:05.1966714Z 
2025-08-13T18:03:05.1966915Z core/all_ratetables.py:10:26: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.1967257Z    |
2025-08-13T18:03:05.1967438Z  8 |     model: GeneralizedLinearRegressor,
2025-08-13T18:03:05.1967692Z  9 |     dataset: pl.DataFrame,
2025-08-13T18:03:05.1967914Z 10 |     predictor_variables: List[str],
2025-08-13T18:03:05.1968156Z    |                          ^^^^ UP006
2025-08-13T18:03:05.1968390Z 11 |     blueprint: Dict[str, Any],
2025-08-13T18:03:05.1968628Z 12 |     random_seed: int = 42,
2025-08-13T18:03:05.1968821Z    |
2025-08-13T18:03:05.1968988Z    = help: Replace with `list`
2025-08-13T18:03:05.1969128Z 
2025-08-13T18:03:05.1969329Z core/all_ratetables.py:11:16: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.1969674Z    |
2025-08-13T18:03:05.1969835Z  9 |     dataset: pl.DataFrame,
2025-08-13T18:03:05.1970048Z 10 |     predictor_variables: List[str],
2025-08-13T18:03:05.1970315Z 11 |     blueprint: Dict[str, Any],
2025-08-13T18:03:05.1970679Z    |                ^^^^ UP006
2025-08-13T18:03:05.1971267Z 12 |     random_seed: int = 42,
2025-08-13T18:03:05.1971665Z 13 | ) -> Dict[str, pl.DataFrame]:
2025-08-13T18:03:05.1972012Z    |
2025-08-13T18:03:05.1972277Z    = help: Replace with `dict`
2025-08-13T18:03:05.1972527Z 
2025-08-13T18:03:05.1972860Z core/all_ratetables.py:13:6: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.1973443Z    |
2025-08-13T18:03:05.1973707Z 11 |     blueprint: Dict[str, Any],
2025-08-13T18:03:05.1974095Z 12 |     random_seed: int = 42,
2025-08-13T18:03:05.1974463Z 13 | ) -> Dict[str, pl.DataFrame]:
2025-08-13T18:03:05.1974714Z    |      ^^^^ UP006
2025-08-13T18:03:05.1974965Z 14 |     """
2025-08-13T18:03:05.1975332Z 15 |     Generates rate tables for all specified predictor variables in a model.
2025-08-13T18:03:05.1975678Z    |
2025-08-13T18:03:05.1975833Z    = help: Replace with `dict`
2025-08-13T18:03:05.1975977Z 
2025-08-13T18:03:05.1976140Z core/all_ratetables.py:33:1: W293 Blank line contains whitespace
2025-08-13T18:03:05.1976433Z    |
2025-08-13T18:03:05.1976689Z 31 |         Dict[str, pl.DataFrame]: A dictionary where keys are the variable names
2025-08-13T18:03:05.1977095Z 32 |         and values are the corresponding Polars DataFrame rate tables.
2025-08-13T18:03:05.1977391Z 33 |     
2025-08-13T18:03:05.1977548Z    | ^^^^ W293
2025-08-13T18:03:05.1977704Z 34 |     Example:
2025-08-13T18:03:05.1977978Z 35 |         >>> # Assuming 'model', 'df', 'predictor_variables', and 'd' are pre-defined
2025-08-13T18:03:05.1978281Z    |
2025-08-13T18:03:05.1978459Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.1978629Z 
2025-08-13T18:03:05.1978819Z core/all_ratetables.py:44:21: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.1979326Z    |
2025-08-13T18:03:05.1979559Z 42 |         >>> print(all_tables['VehAge'])  # Access the rate table for 'VehAge'
2025-08-13T18:03:05.1979964Z 43 |     """
2025-08-13T18:03:05.1980171Z 44 |     all_ratetables: Dict[str, pl.DataFrame] = {}
2025-08-13T18:03:05.1980425Z    |                     ^^^^ UP006
2025-08-13T18:03:05.1980658Z 45 |     for var in predictor_variables:
2025-08-13T18:03:05.1980897Z 46 |         levels = blueprint.get(var)
2025-08-13T18:03:05.1981327Z    |
2025-08-13T18:03:05.1981493Z    = help: Replace with `dict`
2025-08-13T18:03:05.1981636Z 
2025-08-13T18:03:05.1981821Z core/all_ratetables.py:52:9: E731 Do not assign a `lambda` expression, use a `def`
2025-08-13T18:03:05.1982147Z    |
2025-08-13T18:03:05.1982394Z 51 |           # Define the preparation function to be used by the ratetable function
2025-08-13T18:03:05.1982747Z 52 | /         prepare_fn = lambda d: prepare_data(
2025-08-13T18:03:05.1982987Z 53 | |             df=d,
2025-08-13T18:03:05.1983222Z 54 | |             modelling_variables=predictor_variables,
2025-08-13T18:03:05.1983499Z 55 | |             formats=blueprint,
2025-08-13T18:03:05.1983740Z 56 | |             table_name="line_prepped",
2025-08-13T18:03:05.1983967Z 57 | |         )
2025-08-13T18:03:05.1984126Z    | |_________^ E731
2025-08-13T18:03:05.1984295Z 58 |
2025-08-13T18:03:05.1984493Z 59 |           # Generate the rate table for the current variable
2025-08-13T18:03:05.1984756Z    |
2025-08-13T18:03:05.1984921Z    = help: Rewrite `prepare_fn` as a `def`
2025-08-13T18:03:05.1985093Z 
2025-08-13T18:03:05.1985250Z core/all_ratetables.py:69:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.1985542Z    |
2025-08-13T18:03:05.1985685Z 67 |         )
2025-08-13T18:03:05.1985859Z 68 |         all_ratetables[var] = tbl
2025-08-13T18:03:05.1986073Z 69 |         
2025-08-13T18:03:05.1986229Z    | ^^^^^^^^ W293
2025-08-13T18:03:05.1986403Z 70 |     return all_ratetables
2025-08-13T18:03:05.1986596Z    |
2025-08-13T18:03:05.1986763Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.1986942Z 
2025-08-13T18:03:05.1987120Z core/blueprint.py:1:1: UP035 `typing.Dict` is deprecated, use `dict` instead
2025-08-13T18:03:05.1987440Z   |
2025-08-13T18:03:05.1987605Z 1 | from typing import Dict, Any
2025-08-13T18:03:05.1987814Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.1988030Z 2 | import numpy as np
2025-08-13T18:03:05.1988219Z 3 | import polars as pl
2025-08-13T18:03:05.1988392Z   |
2025-08-13T18:03:05.1988474Z 
2025-08-13T18:03:05.1988642Z core/blueprint.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.1988943Z   |
2025-08-13T18:03:05.1989105Z 1 | / from typing import Dict, Any
2025-08-13T18:03:05.1989319Z 2 | | import numpy as np
2025-08-13T18:03:05.1989518Z 3 | | import polars as pl
2025-08-13T18:03:05.1989740Z 4 | | from .transforms import lump_rare_levels_pl
2025-08-13T18:03:05.1990006Z   | |___________________________________________^ I001
2025-08-13T18:03:05.1990231Z 5 |
2025-08-13T18:03:05.1990550Z 6 |   def generate_blueprint(dataframe: pl.DataFrame, threshold: float = 0.0025) -> Dict[str, Any]:
2025-08-13T18:03:05.1990939Z   |
2025-08-13T18:03:05.1991253Z   = help: Organize imports
2025-08-13T18:03:05.1991402Z 
2025-08-13T18:03:05.1991585Z core/blueprint.py:6:79: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.1991905Z   |
2025-08-13T18:03:05.1992088Z 4 | from .transforms import lump_rare_levels_pl
2025-08-13T18:03:05.1992320Z 5 |
2025-08-13T18:03:05.1992639Z 6 | def generate_blueprint(dataframe: pl.DataFrame, threshold: float = 0.0025) -> Dict[str, Any]:
2025-08-13T18:03:05.1993057Z   |                                                                               ^^^^ UP006
2025-08-13T18:03:05.1993298Z 7 |     """
2025-08-13T18:03:05.1993625Z 8 |     Generate a blueprint dictionary describing how to preprocess each column for modeling.
2025-08-13T18:03:05.1993985Z   |
2025-08-13T18:03:05.1994146Z   = help: Replace with `dict`
2025-08-13T18:03:05.1994284Z 
2025-08-13T18:03:05.1994668Z core/blueprint.py:27:16: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.1994991Z    |
2025-08-13T18:03:05.1995295Z 25 |         >>> print(blueprint['VehBrand'])  # Categorical levels
2025-08-13T18:03:05.1995559Z 26 |     """
2025-08-13T18:03:05.1995741Z 27 |     blueprint: Dict[str, Any] = {}
2025-08-13T18:03:05.1995974Z    |                ^^^^ UP006
2025-08-13T18:03:05.1996194Z 28 |     for column in dataframe.columns:
2025-08-13T18:03:05.1996418Z 29 |         try:
2025-08-13T18:03:05.1996580Z    |
2025-08-13T18:03:05.1996735Z    = help: Replace with `dict`
2025-08-13T18:03:05.1996879Z 
2025-08-13T18:03:05.1997024Z core/data.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.1997312Z   |
2025-08-13T18:03:05.1997480Z 1 | / from typing import Union
2025-08-13T18:03:05.1997693Z 2 | | import urllib.request
2025-08-13T18:03:05.1997892Z 3 | | import polars as pl
2025-08-13T18:03:05.1998100Z 4 | | import pandas as pd
2025-08-13T18:03:05.1998293Z 5 | | import rdata
2025-08-13T18:03:05.1998467Z   | |____________^ I001
2025-08-13T18:03:05.1998633Z 6 |
2025-08-13T18:03:05.1998840Z 7 |   def load_external_dataframe() -> pl.DataFrame:
2025-08-13T18:03:05.1999093Z   |
2025-08-13T18:03:05.1999247Z   = help: Organize imports
2025-08-13T18:03:05.1999373Z 
2025-08-13T18:03:05.1999513Z core/data.py:24:9: UP007 [*] Use `X | Y` for type annotations
2025-08-13T18:03:05.1999777Z    |
2025-08-13T18:03:05.1999969Z 22 |     parsed_data = rdata.parser.parse_data(data)
2025-08-13T18:03:05.2000293Z 23 |     converted_data = rdata.conversion.convert(parsed_data)
2025-08-13T18:03:05.2000680Z 24 |     df: Union[pd.DataFrame, pl.DataFrame] = converted_data['freMTPL2freq']
2025-08-13T18:03:05.2001198Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-13T18:03:05.2001456Z 25 |     if isinstance(df, pd.DataFrame):
2025-08-13T18:03:05.2001699Z 26 |         df = pl.from_pandas(df)
2025-08-13T18:03:05.2001900Z    |
2025-08-13T18:03:05.2002057Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2002199Z 
2025-08-13T18:03:05.2002351Z core/model.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2002647Z    |
2025-08-13T18:03:05.2002804Z  1 | / from typing import Optional
2025-08-13T18:03:05.2003028Z  2 | | import numpy as np
2025-08-13T18:03:05.2003233Z  3 | | import pandas as pd
2025-08-13T18:03:05.2003453Z  4 | | import pandas.api.types as ptypes
2025-08-13T18:03:05.2003724Z  5 | | import dask.dataframe as dd
2025-08-13T18:03:05.2003983Z  6 | | from dask_ml.preprocessing import Categorizer
2025-08-13T18:03:05.2004283Z  7 | | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2004542Z  8 | | import polars as pl
2025-08-13T18:03:05.2004740Z    | |___________________^ I001
2025-08-13T18:03:05.2004924Z  9 |
2025-08-13T18:03:05.2005081Z 10 |   def fit_lasso_glm(
2025-08-13T18:03:05.2005255Z    |
2025-08-13T18:03:05.2005414Z    = help: Organize imports
2025-08-13T18:03:05.2005543Z 
2025-08-13T18:03:05.2005694Z core/model.py:15:17: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2005978Z    |
2025-08-13T18:03:05.2006137Z 13 |     train_test_col: str,
2025-08-13T18:03:05.2006339Z 14 |     model_type: str,
2025-08-13T18:03:05.2006553Z 15 |     weight_col: Optional[str] = None,
2025-08-13T18:03:05.2006812Z    |                 ^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2007056Z 16 |     DivideTargetByWeight: bool = False,
2025-08-13T18:03:05.2007321Z 17 | ) -> GeneralizedLinearRegressor:
2025-08-13T18:03:05.2007546Z    |
2025-08-13T18:03:05.2007702Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2007844Z 
2025-08-13T18:03:05.2008042Z core/model.py:16:5: N803 Argument name `DivideTargetByWeight` should be lowercase
2025-08-13T18:03:05.2008372Z    |
2025-08-13T18:03:05.2008525Z 14 |     model_type: str,
2025-08-13T18:03:05.2008730Z 15 |     weight_col: Optional[str] = None,
2025-08-13T18:03:05.2008990Z 16 |     DivideTargetByWeight: bool = False,
2025-08-13T18:03:05.2009235Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ N803
2025-08-13T18:03:05.2009614Z 17 | ) -> GeneralizedLinearRegressor:
2025-08-13T18:03:05.2009838Z    |
2025-08-13T18:03:05.2009920Z 
2025-08-13T18:03:05.2010160Z core/model.py:81:5: N806 Variable `X` in function should be lowercase
2025-08-13T18:03:05.2010462Z    |
2025-08-13T18:03:05.2010618Z 79 |     # --- Fit glum ---
2025-08-13T18:03:05.2010885Z 80 |     features = [c for c in train_df.columns if c not in exclude]
2025-08-13T18:03:05.2011368Z 81 |     X = train_df[features]
2025-08-13T18:03:05.2011576Z    |     ^ N806
2025-08-13T18:03:05.2011764Z 82 |     y = train_df[target].to_numpy().ravel()
2025-08-13T18:03:05.2012090Z 83 |     sw = train_df[weight_col].to_numpy().ravel() if weight_col else None
2025-08-13T18:03:05.2012385Z    |
2025-08-13T18:03:05.2012466Z 
2025-08-13T18:03:05.2012610Z core/plots.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2012894Z   |
2025-08-13T18:03:05.2013049Z 1 | / import polars as pl
2025-08-13T18:03:05.2013264Z 2 | | import matplotlib.pyplot as plt
2025-08-13T18:03:05.2013495Z 3 | | import seaborn as sns
2025-08-13T18:03:05.2013703Z 4 | | from typing import Dict, Any
2025-08-13T18:03:05.2013920Z   | |____________________________^ I001
2025-08-13T18:03:05.2014137Z 5 |
2025-08-13T18:03:05.2014441Z 6 |   def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):
2025-08-13T18:03:05.2014795Z   |
2025-08-13T18:03:05.2014950Z   = help: Organize imports
2025-08-13T18:03:05.2015076Z 
2025-08-13T18:03:05.2015238Z core/plots.py:4:1: UP035 `typing.Dict` is deprecated, use `dict` instead
2025-08-13T18:03:05.2015541Z   |
2025-08-13T18:03:05.2015701Z 2 | import matplotlib.pyplot as plt
2025-08-13T18:03:05.2015931Z 3 | import seaborn as sns
2025-08-13T18:03:05.2016127Z 4 | from typing import Dict, Any
2025-08-13T18:03:05.2016345Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2016550Z 5 |
2025-08-13T18:03:05.2016834Z 6 | def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):
2025-08-13T18:03:05.2017195Z   |
2025-08-13T18:03:05.2017273Z 
2025-08-13T18:03:05.2017437Z core/plots.py:6:37: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2017751Z   |
2025-08-13T18:03:05.2017905Z 4 | from typing import Dict, Any
2025-08-13T18:03:05.2018106Z 5 |
2025-08-13T18:03:05.2018390Z 6 | def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):
2025-08-13T18:03:05.2018770Z   |                                     ^^^^ UP006
2025-08-13T18:03:05.2018996Z 7 |     """
2025-08-13T18:03:05.2019203Z 8 |     Plots relativity curves for all rate tables.
2025-08-13T18:03:05.2019445Z   |
2025-08-13T18:03:05.2019597Z   = help: Replace with `dict`
2025-08-13T18:03:05.2019738Z 
2025-08-13T18:03:05.2019899Z core/plots.py:6:73: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2020200Z   |
2025-08-13T18:03:05.2020361Z 4 | from typing import Dict, Any
2025-08-13T18:03:05.2020556Z 5 |
2025-08-13T18:03:05.2020842Z 6 | def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):
2025-08-13T18:03:05.2021405Z   |                                                                         ^^^^ UP006
2025-08-13T18:03:05.2021650Z 7 |     """
2025-08-13T18:03:05.2021843Z 8 |     Plots relativity curves for all rate tables.
2025-08-13T18:03:05.2022084Z   |
2025-08-13T18:03:05.2022242Z   = help: Replace with `dict`
2025-08-13T18:03:05.2022378Z 
2025-08-13T18:03:05.2022512Z core/plots.py:26:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2022788Z    |
2025-08-13T18:03:05.2022964Z 25 |         plt.figure(figsize=(10, 6))
2025-08-13T18:03:05.2023184Z 26 |         
2025-08-13T18:03:05.2023344Z    | ^^^^^^^^ W293
2025-08-13T18:03:05.2023615Z 27 |         # Determine if the variable is numeric or categorical from the blueprint
2025-08-13T18:03:05.2024092Z 28 |         is_numeric = all(isinstance(x, (int, float)) for x in blueprint.get(var_name, []))
2025-08-13T18:03:05.2024430Z    |
2025-08-13T18:03:05.2024734Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2024905Z 
2025-08-13T18:03:05.2025175Z core/plots.py:28:26: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2025494Z    |
2025-08-13T18:03:05.2025747Z 27 |         # Determine if the variable is numeric or categorical from the blueprint
2025-08-13T18:03:05.2026191Z 28 |         is_numeric = all(isinstance(x, (int, float)) for x in blueprint.get(var_name, []))
2025-08-13T18:03:05.2026555Z    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2026775Z 29 |
2025-08-13T18:03:05.2026926Z 30 |         if is_numeric:
2025-08-13T18:03:05.2027101Z    |
2025-08-13T18:03:05.2027270Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2027403Z 
2025-08-13T18:03:05.2027581Z core/prepare.py:1:1: UP035 `typing.List` is deprecated, use `list` instead
2025-08-13T18:03:05.2027890Z   |
2025-08-13T18:03:05.2028055Z 1 | from typing import List, Optional
2025-08-13T18:03:05.2028279Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2028504Z 2 | import duckdb
2025-08-13T18:03:05.2028677Z 3 | import polars as pl
2025-08-13T18:03:05.2028858Z   |
2025-08-13T18:03:05.2028942Z 
2025-08-13T18:03:05.2029099Z core/prepare.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2029397Z   |
2025-08-13T18:03:05.2029563Z 1 | / from typing import List, Optional
2025-08-13T18:03:05.2029785Z 2 | | import duckdb
2025-08-13T18:03:05.2029963Z 3 | | import polars as pl
2025-08-13T18:03:05.2030182Z 4 | | from .transforms import o_matrix, lump_fun
2025-08-13T18:03:05.2030443Z   | |__________________________________________^ I001
2025-08-13T18:03:05.2030660Z 5 |
2025-08-13T18:03:05.2030812Z 6 |   def prepare_data(
2025-08-13T18:03:05.2031127Z   |
2025-08-13T18:03:05.2031293Z   = help: Organize imports
2025-08-13T18:03:05.2031447Z 
2025-08-13T18:03:05.2031634Z core/prepare.py:7:26: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2031947Z   |
2025-08-13T18:03:05.2032104Z 6 | def prepare_data(
2025-08-13T18:03:05.2032299Z 7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2032529Z   |                          ^^^^ UP006
2025-08-13T18:03:05.2032783Z 8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2033074Z 9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2033301Z   |
2025-08-13T18:03:05.2033459Z   = help: Replace with `list`
2025-08-13T18:03:05.2033596Z 
2025-08-13T18:03:05.2033755Z core/prepare.py:8:25: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2034042Z    |
2025-08-13T18:03:05.2034199Z  6 | def prepare_data(
2025-08-13T18:03:05.2034399Z  7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2034682Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2034949Z    |                         ^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2035205Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2035466Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2035699Z    |
2025-08-13T18:03:05.2035863Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2036008Z 
2025-08-13T18:03:05.2036182Z core/prepare.py:8:34: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2036535Z    |
2025-08-13T18:03:05.2036686Z  6 | def prepare_data(
2025-08-13T18:03:05.2036892Z  7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2037166Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2037437Z    |                                  ^^^^ UP006
2025-08-13T18:03:05.2037681Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2037939Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2038159Z    |
2025-08-13T18:03:05.2038314Z    = help: Replace with `list`
2025-08-13T18:03:05.2038451Z 
2025-08-13T18:03:05.2038603Z core/prepare.py:9:23: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2038887Z    |
2025-08-13T18:03:05.2039051Z  7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2039437Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2039717Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2040052Z    |                       ^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2040299Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2040542Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2040745Z    |
2025-08-13T18:03:05.2040901Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2041234Z 
2025-08-13T18:03:05.2041513Z core/prepare.py:10:9: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2041814Z    |
2025-08-13T18:03:05.2041999Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2042285Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2042536Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2042775Z    |         ^^^^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2043001Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2043236Z 12 |     formats: dict = {},
2025-08-13T18:03:05.2043427Z    |
2025-08-13T18:03:05.2043581Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2043732Z 
2025-08-13T18:03:05.2043919Z core/prepare.py:12:21: B006 Do not use mutable data structures for argument defaults
2025-08-13T18:03:05.2044244Z    |
2025-08-13T18:03:05.2044414Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2044657Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2044874Z 12 |     formats: dict = {},
2025-08-13T18:03:05.2045075Z    |                     ^^ B006
2025-08-13T18:03:05.2045317Z 13 |     con: Optional[duckdb.DuckDBPyConnection] = None
2025-08-13T18:03:05.2045591Z 14 | ) -> pl.DataFrame:
2025-08-13T18:03:05.2045774Z    |
2025-08-13T18:03:05.2045984Z    = help: Replace with `None`; initialize within function
2025-08-13T18:03:05.2046190Z 
2025-08-13T18:03:05.2046348Z core/prepare.py:13:10: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2046646Z    |
2025-08-13T18:03:05.2046818Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2047046Z 12 |     formats: dict = {},
2025-08-13T18:03:05.2047314Z 13 |     con: Optional[duckdb.DuckDBPyConnection] = None
2025-08-13T18:03:05.2047598Z    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2047840Z 14 | ) -> pl.DataFrame:
2025-08-13T18:03:05.2048014Z 15 |     """
2025-08-13T18:03:05.2048171Z    |
2025-08-13T18:03:05.2048328Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2048475Z 
2025-08-13T18:03:05.2048658Z core/prepare.py:53:18: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2048981Z    |
2025-08-13T18:03:05.2049122Z 51 |         )
2025-08-13T18:03:05.2049279Z 52 |
2025-08-13T18:03:05.2049432Z 53 |     expressions: List[str] = []
2025-08-13T18:03:05.2049653Z    |                  ^^^^ UP006
2025-08-13T18:03:05.2049835Z 54 |
2025-08-13T18:03:05.2050000Z 55 |     if additional_columns is None:
2025-08-13T18:03:05.2050214Z    |
2025-08-13T18:03:05.2050376Z    = help: Replace with `list`
2025-08-13T18:03:05.2050516Z 
2025-08-13T18:03:05.2050695Z core/prepare.py:67:20: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2051149Z    |
2025-08-13T18:03:05.2051307Z 65 |         if var in formats:
2025-08-13T18:03:05.2051518Z 66 |             dict_values = formats[var]
2025-08-13T18:03:05.2051807Z 67 |             if all(isinstance(x, (int, float)) for x in dict_values):
2025-08-13T18:03:05.2052103Z    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2052384Z 68 |                 expressions.extend(o_matrix(var, dict_values))
2025-08-13T18:03:05.2052644Z 69 |             else:
2025-08-13T18:03:05.2052815Z    |
2025-08-13T18:03:05.2052966Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2053107Z 
2025-08-13T18:03:05.2053335Z core/ratetable.py:1:1: UP035 [*] Import from `collections.abc` instead: `Sequence`, `Callable`
2025-08-13T18:03:05.2053712Z   |
2025-08-13T18:03:05.2053911Z 1 | from typing import Optional, Sequence, Callable, Any
2025-08-13T18:03:05.2054342Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2054579Z 2 | import polars as pl
2025-08-13T18:03:05.2054868Z 3 | import pandas as pd
2025-08-13T18:03:05.2055049Z   |
2025-08-13T18:03:05.2055220Z   = help: Import from `collections.abc`
2025-08-13T18:03:05.2055386Z 
2025-08-13T18:03:05.2055559Z core/ratetable.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2055862Z    |
2025-08-13T18:03:05.2056071Z  1 | / from typing import Optional, Sequence, Callable, Any
2025-08-13T18:03:05.2056352Z  2 | | import polars as pl
2025-08-13T18:03:05.2056556Z  3 | | import pandas as pd
2025-08-13T18:03:05.2056769Z  4 | | import pandas.api.types as ptypes
2025-08-13T18:03:05.2057014Z  5 | | import numpy as np
2025-08-13T18:03:05.2057215Z  6 | | import dask.dataframe as dd
2025-08-13T18:03:05.2057477Z  7 | | from dask_ml.preprocessing import Categorizer
2025-08-13T18:03:05.2057775Z  8 | | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2058031Z  9 | | import functools
2025-08-13T18:03:05.2058218Z    | |________________^ I001
2025-08-13T18:03:05.2058397Z 10 |
2025-08-13T18:03:05.2058614Z 11 |   def typechecked_ratetable(func: Callable) -> Callable:
2025-08-13T18:03:05.2058884Z    |
2025-08-13T18:03:05.2059044Z    = help: Organize imports
2025-08-13T18:03:05.2059179Z 
2025-08-13T18:03:05.2059323Z core/ratetable.py:3:18: F401 [*] `pandas` imported but unused
2025-08-13T18:03:05.2059609Z   |
2025-08-13T18:03:05.2059816Z 1 | from typing import Optional, Sequence, Callable, Any
2025-08-13T18:03:05.2060089Z 2 | import polars as pl
2025-08-13T18:03:05.2060282Z 3 | import pandas as pd
2025-08-13T18:03:05.2060459Z   |                  ^^ F401
2025-08-13T18:03:05.2060676Z 4 | import pandas.api.types as ptypes
2025-08-13T18:03:05.2060907Z 5 | import numpy as np
2025-08-13T18:03:05.2061220Z   |
2025-08-13T18:03:05.2061389Z   = help: Remove unused import: `pandas`
2025-08-13T18:03:05.2061557Z 
2025-08-13T18:03:05.2061750Z core/ratetable.py:23:39: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2062083Z    |
2025-08-13T18:03:05.2062316Z 21 |         if "col_name" in kwargs and not isinstance(kwargs["col_name"], str):
2025-08-13T18:03:05.2062659Z 22 |             raise TypeError("col_name must be a string")
2025-08-13T18:03:05.2063047Z 23 |         if "levels" in kwargs and not isinstance(kwargs["levels"], (list, tuple, np.ndarray)):
2025-08-13T18:03:05.2063436Z    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2063808Z 24 |             raise TypeError("levels must be a sequence (list, tuple, or np.ndarray)")
2025-08-13T18:03:05.2064161Z 25 |         return func(*args, **kwargs)
2025-08-13T18:03:05.2064378Z    |
2025-08-13T18:03:05.2064536Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2064669Z 
2025-08-13T18:03:05.2064834Z core/ratetable.py:35:14: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2065132Z    |
2025-08-13T18:03:05.2065280Z 33 |     col_name: str,
2025-08-13T18:03:05.2065463Z 34 |     levels: Sequence[Any],
2025-08-13T18:03:05.2065768Z 35 |     prepare: Optional[Callable[[pl.DataFrame], pl.DataFrame]] = None,
2025-08-13T18:03:05.2066096Z    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2066360Z 36 |     random_seed: Optional[int] = None,
2025-08-13T18:03:05.2066606Z 37 |     include_raw: bool = True,
2025-08-13T18:03:05.2066805Z    |
2025-08-13T18:03:05.2066967Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2067109Z 
2025-08-13T18:03:05.2067266Z core/ratetable.py:36:18: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2067564Z    |
2025-08-13T18:03:05.2067717Z 34 |     levels: Sequence[Any],
2025-08-13T18:03:05.2068013Z 35 |     prepare: Optional[Callable[[pl.DataFrame], pl.DataFrame]] = None,
2025-08-13T18:03:05.2068342Z 36 |     random_seed: Optional[int] = None,
2025-08-13T18:03:05.2068576Z    |                  ^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2068924Z 37 |     include_raw: bool = True,
2025-08-13T18:03:05.2069136Z 38 | ) -> pl.DataFrame:
2025-08-13T18:03:05.2069315Z    |
2025-08-13T18:03:05.2069565Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2069713Z 
2025-08-13T18:03:05.2069882Z core/ratetable.py:112:5: N806 Variable `N` in function should be lowercase
2025-08-13T18:03:05.2070187Z     |
2025-08-13T18:03:05.2070352Z 111 |     # 2) Duplicate it N times
2025-08-13T18:03:05.2070568Z 112 |     N = len(levels)
2025-08-13T18:03:05.2070747Z     |     ^ N806
2025-08-13T18:03:05.2071134Z 113 |     duplicated = pl.concat([random_row] * N, how="vertical")
2025-08-13T18:03:05.2071413Z     |
2025-08-13T18:03:05.2071501Z 
2025-08-13T18:03:05.2071644Z core/ratetable.py:150:44: W292 [*] No newline at end of file
2025-08-13T18:03:05.2071915Z     |
2025-08-13T18:03:05.2072096Z 148 |         out["prediction"] = preds.tolist()
2025-08-13T18:03:05.2072332Z 149 |
2025-08-13T18:03:05.2072518Z 150 |     return pl.DataFrame(out).sort(col_name)
2025-08-13T18:03:05.2072780Z     |                                            ^ W292
2025-08-13T18:03:05.2072997Z     |
2025-08-13T18:03:05.2073164Z     = help: Add trailing newline
2025-08-13T18:03:05.2073307Z 
2025-08-13T18:03:05.2073492Z core/transforms.py:1:1: UP035 `typing.List` is deprecated, use `list` instead
2025-08-13T18:03:05.2073827Z   |
2025-08-13T18:03:05.2073985Z 1 | from typing import List
2025-08-13T18:03:05.2074193Z   | ^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2074396Z 2 | import numpy as np
2025-08-13T18:03:05.2074586Z 3 | import polars as pl
2025-08-13T18:03:05.2074762Z   |
2025-08-13T18:03:05.2074841Z 
2025-08-13T18:03:05.2075006Z core/transforms.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2075315Z   |
2025-08-13T18:03:05.2075466Z 1 | / from typing import List
2025-08-13T18:03:05.2075675Z 2 | | import numpy as np
2025-08-13T18:03:05.2075865Z 3 | | import polars as pl
2025-08-13T18:03:05.2076061Z   | |___________________^ I001
2025-08-13T18:03:05.2076242Z 4 |
2025-08-13T18:03:05.2076432Z 5 |   def o_matrix(col_name: str, brks) -> List[str]:
2025-08-13T18:03:05.2076669Z   |
2025-08-13T18:03:05.2076836Z   = help: Organize imports
2025-08-13T18:03:05.2076976Z 
2025-08-13T18:03:05.2077170Z core/transforms.py:5:38: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2077495Z   |
2025-08-13T18:03:05.2077649Z 3 | import polars as pl
2025-08-13T18:03:05.2077821Z 4 |
2025-08-13T18:03:05.2078003Z 5 | def o_matrix(col_name: str, brks) -> List[str]:
2025-08-13T18:03:05.2078257Z   |                                      ^^^^ UP006
2025-08-13T18:03:05.2078474Z 6 |     """
2025-08-13T18:03:05.2078769Z 7 |     Generate SQL CASE statements for one-hot style ordinal splits at given breakpoints.
2025-08-13T18:03:05.2079124Z   |
2025-08-13T18:03:05.2079285Z   = help: Replace with `list`
2025-08-13T18:03:05.2079421Z 
2025-08-13T18:03:05.2079609Z core/transforms.py:35:16: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2079941Z    |
2025-08-13T18:03:05.2080117Z 33 |         raise ValueError("brks cannot be empty")
2025-08-13T18:03:05.2080384Z 34 |     for i, val in enumerate(brks):
2025-08-13T18:03:05.2080689Z 35 |         if not isinstance(val, (int, float, np.integer, np.floating)):
2025-08-13T18:03:05.2081100Z    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2081521Z 36 |             raise ValueError(f"All values in brks must be numeric. Value at index {i} is {type(val)}: {val}")
2025-08-13T18:03:05.2081932Z 37 |         if np.isnan(val) or np.isinf(val):
2025-08-13T18:03:05.2082160Z    |
2025-08-13T18:03:05.2082315Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2082456Z 
2025-08-13T18:03:05.2082641Z core/transforms.py:51:37: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2082964Z    |
2025-08-13T18:03:05.2083126Z 49 |     return sql_statements
2025-08-13T18:03:05.2083323Z 50 |
2025-08-13T18:03:05.2083581Z 51 | def lump_fun(col_name: str, levels: List, other_category: str = 'Other') -> str:
2025-08-13T18:03:05.2084057Z    |                                     ^^^^ UP006
2025-08-13T18:03:05.2084372Z 52 |     """
2025-08-13T18:03:05.2084726Z 53 |     Create a SQL CASE statement to group categorical levels, lumping rare/unseen levels into 'Other'.
2025-08-13T18:03:05.2085115Z    |
2025-08-13T18:03:05.2085283Z    = help: Replace with `list`
2025-08-13T18:03:05.2085420Z 
2025-08-13T18:03:05.2085609Z examples/basic_usage.py:4:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2085933Z   |
2025-08-13T18:03:05.2086230Z 2 |   Run with: python -m examples.basic_usage (from project root when editable-installed)
2025-08-13T18:03:05.2086585Z 3 |   """
2025-08-13T18:03:05.2086747Z 4 | / import easy_glm
2025-08-13T18:03:05.2086935Z 5 | | import polars as pl
2025-08-13T18:03:05.2087141Z 6 | | import numpy as np
2025-08-13T18:03:05.2087325Z   | |__________________^ I001
2025-08-13T18:03:05.2087508Z 7 |
2025-08-13T18:03:05.2087657Z 8 |   # Load demo dataset
2025-08-13T18:03:05.2087834Z   |
2025-08-13T18:03:05.2087992Z   = help: Organize imports
2025-08-13T18:03:05.2088118Z 
2025-08-13T18:03:05.2088263Z setup_dev.py:7:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2088547Z    |
2025-08-13T18:03:05.2088685Z  5 |   """
2025-08-13T18:03:05.2088836Z  6 |
2025-08-13T18:03:05.2088974Z  7 | / import os
2025-08-13T18:03:05.2089140Z  8 | | import sys
2025-08-13T18:03:05.2089310Z  9 | | import subprocess
2025-08-13T18:03:05.2089503Z 10 | | import platform
2025-08-13T18:03:05.2089693Z 11 | | from pathlib import Path
2025-08-13T18:03:05.2089901Z    | |________________________^ I001
2025-08-13T18:03:05.2090099Z 12 |
2025-08-13T18:03:05.2090258Z 13 |   def run_command(cmd, shell=False):
2025-08-13T18:03:05.2090479Z    |
2025-08-13T18:03:05.2090631Z    = help: Organize imports
2025-08-13T18:03:05.2090759Z 
2025-08-13T18:03:05.2090891Z setup_dev.py:49:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2091419Z    |
2025-08-13T18:03:05.2091601Z 47 |     """Install dependencies using uv."""
2025-08-13T18:03:05.2091877Z 48 |     print("Installing dependencies with uv...")
2025-08-13T18:03:05.2092133Z 49 |     
2025-08-13T18:03:05.2092279Z    | ^^^^ W293
2025-08-13T18:03:05.2092524Z 50 |     # Get the appropriate pip command for the virtual environment
2025-08-13T18:03:05.2092851Z 51 |     if platform.system() == "Windows":
2025-08-13T18:03:05.2093073Z    |
2025-08-13T18:03:05.2093253Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2093421Z 
2025-08-13T18:03:05.2093546Z setup_dev.py:55:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2093819Z    |
2025-08-13T18:03:05.2093956Z 53 |     else:
2025-08-13T18:03:05.2094146Z 54 |         pip_cmd = ["uv", "pip", "install"]
2025-08-13T18:03:05.2094379Z 55 |     
2025-08-13T18:03:05.2094532Z    | ^^^^ W293
2025-08-13T18:03:05.2094721Z 56 |     # Install development dependencies
2025-08-13T18:03:05.2095084Z 57 |     success, stdout, stderr = run_command(pip_cmd + ["-r", "requirements-dev.txt"])
2025-08-13T18:03:05.2095432Z    |
2025-08-13T18:03:05.2095602Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2095779Z 
2025-08-13T18:03:05.2095902Z setup_dev.py:61:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2096163Z    |
2025-08-13T18:03:05.2096366Z 59 |         print(f"Error installing dependencies: {stderr}")
2025-08-13T18:03:05.2096640Z 60 |         return False
2025-08-13T18:03:05.2096815Z 61 |     
2025-08-13T18:03:05.2096966Z    | ^^^^ W293
2025-08-13T18:03:05.2097144Z 62 |     # Install package in editable mode
2025-08-13T18:03:05.2097422Z 63 |     print("Installing package in editable mode...")
2025-08-13T18:03:05.2097670Z    |
2025-08-13T18:03:05.2097842Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2098008Z 
2025-08-13T18:03:05.2098129Z setup_dev.py:68:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2098393Z    |
2025-08-13T18:03:05.2098575Z 66 |         print(f"Error installing package: {stderr}")
2025-08-13T18:03:05.2098961Z 67 |         return False
2025-08-13T18:03:05.2099140Z 68 |     
2025-08-13T18:03:05.2099284Z    | ^^^^ W293
2025-08-13T18:03:05.2099576Z 69 |     return True
2025-08-13T18:03:05.2099741Z    |
2025-08-13T18:03:05.2099911Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2100076Z 
2025-08-13T18:03:05.2100198Z setup_dev.py:74:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2100454Z    |
2025-08-13T18:03:05.2100609Z 72 |     """Main setup function."""
2025-08-13T18:03:05.2101281Z 73 |     print("🚀 Setting up easy_glm development environment...")
2025-08-13T18:03:05.2101576Z 74 |     
2025-08-13T18:03:05.2101727Z    | ^^^^ W293
2025-08-13T18:03:05.2101904Z 75 |     # Check if uv is installed
2025-08-13T18:03:05.2102125Z 76 |     if not check_uv_installed():
2025-08-13T18:03:05.2102339Z    |
2025-08-13T18:03:05.2102509Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2102684Z 
2025-08-13T18:03:05.2102816Z setup_dev.py:82:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2103077Z    |
2025-08-13T18:03:05.2103312Z 80 |         print("   Or visit: https://github.com/astral-sh/uv")
2025-08-13T18:03:05.2103597Z 81 |         sys.exit(1)
2025-08-13T18:03:05.2103773Z 82 |     
2025-08-13T18:03:05.2103921Z    | ^^^^ W293
2025-08-13T18:03:05.2104091Z 83 |     # Create virtual environment
2025-08-13T18:03:05.2104325Z 84 |     if not create_venv():
2025-08-13T18:03:05.2104513Z    |
2025-08-13T18:03:05.2104688Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2104853Z 
2025-08-13T18:03:05.2104975Z setup_dev.py:87:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2105237Z    |
2025-08-13T18:03:05.2105492Z 85 |         print("❌ Failed to create virtual environment")
2025-08-13T18:03:05.2105753Z 86 |         sys.exit(1)
2025-08-13T18:03:05.2105934Z 87 |     
2025-08-13T18:03:05.2106079Z    | ^^^^ W293
2025-08-13T18:03:05.2106305Z 88 |     # Set UV_PYTHON environment variable to use the venv python
2025-08-13T18:03:05.2106611Z 89 |     if platform.system() == "Windows":
2025-08-13T18:03:05.2106835Z    |
2025-08-13T18:03:05.2107008Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2107183Z 
2025-08-13T18:03:05.2107303Z setup_dev.py:93:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2107565Z    |
2025-08-13T18:03:05.2107703Z 91 |     else:
2025-08-13T18:03:05.2107937Z 92 |         python_path = str(Path.cwd() / "venv" / "bin" / "python")
2025-08-13T18:03:05.2108210Z 93 |     
2025-08-13T18:03:05.2108359Z    | ^^^^ W293
2025-08-13T18:03:05.2108546Z 94 |     os.environ["UV_PYTHON"] = python_path
2025-08-13T18:03:05.2108780Z    |
2025-08-13T18:03:05.2108948Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2109123Z 
2025-08-13T18:03:05.2109246Z setup_dev.py:95:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2109505Z    |
2025-08-13T18:03:05.2109670Z 94 |     os.environ["UV_PYTHON"] = python_path
2025-08-13T18:03:05.2109901Z 95 |     
2025-08-13T18:03:05.2110048Z    | ^^^^ W293
2025-08-13T18:03:05.2110226Z 96 |     # Install dependencies
2025-08-13T18:03:05.2110449Z 97 |     if not install_dependencies():
2025-08-13T18:03:05.2110668Z    |
2025-08-13T18:03:05.2110830Z    = help: Remove whitespace from blank line
2025-08-13T18:03:05.2111097Z 
2025-08-13T18:03:05.2111230Z setup_dev.py:100:1: W293 [*] Blank line contains whitespace
2025-08-13T18:03:05.2111492Z     |
2025-08-13T18:03:05.2111733Z  98 |         print("❌ Failed to install dependencies")
2025-08-13T18:03:05.2111987Z  99 |         sys.exit(1)
2025-08-13T18:03:05.2112160Z 100 |     
2025-08-13T18:03:05.2112310Z     | ^^^^ W293
2025-08-13T18:03:05.2112529Z 101 |     print("✅ Setup complete! 🎉")
2025-08-13T18:03:05.2112755Z 102 |     print()
2025-08-13T18:03:05.2112911Z     |
2025-08-13T18:03:05.2113088Z     = help: Remove whitespace from blank line
2025-08-13T18:03:05.2113257Z 
2025-08-13T18:03:05.2113361Z setup_dev.py:113:11: W291 [*] Trailing whitespace
2025-08-13T18:03:05.2113735Z     |
2025-08-13T18:03:05.2113895Z 112 | if __name__ == "__main__":
2025-08-13T18:03:05.2114088Z 113 |     main() 
2025-08-13T18:03:05.2114254Z     |           ^ W291
2025-08-13T18:03:05.2114523Z     |
2025-08-13T18:03:05.2114696Z     = help: Remove trailing whitespace
2025-08-13T18:03:05.2114855Z 
2025-08-13T18:03:05.2114969Z setup_dev.py:113:12: W292 [*] No newline at end of file
2025-08-13T18:03:05.2115218Z     |
2025-08-13T18:03:05.2115368Z 112 | if __name__ == "__main__":
2025-08-13T18:03:05.2115567Z 113 |     main() 
2025-08-13T18:03:05.2115726Z     |            ^ W292
2025-08-13T18:03:05.2115896Z     |
2025-08-13T18:03:05.2116059Z     = help: Add trailing newline
2025-08-13T18:03:05.2116198Z 
2025-08-13T18:03:05.2116375Z src/easy_glm/__init__.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2116694Z    |
2025-08-13T18:03:05.2116868Z  1 | / from .core.prepare import prepare_data
2025-08-13T18:03:05.2117173Z  2 | | from .core.model import fit_lasso_glm, predict_with_model
2025-08-13T18:03:05.2117501Z  3 | | from .core.blueprint import generate_blueprint
2025-08-13T18:03:05.2117857Z  4 | | from .core.transforms import lump_rare_levels_pl, lump_fun, o_matrix
2025-08-13T18:03:05.2118210Z  5 | | from .core.data import load_external_dataframe
2025-08-13T18:03:05.2118479Z  6 | | from .core.ratetable import ratetable
2025-08-13T18:03:05.2118775Z  7 | | from .core.all_ratetables import generate_all_ratetables
2025-08-13T18:03:05.2119083Z  8 | | from .core.plots import plot_all_ratetables
2025-08-13T18:03:05.2119353Z    | |___________________________________________^ I001
2025-08-13T18:03:05.2119569Z  9 |
2025-08-13T18:03:05.2119714Z 10 |   __all__ = [
2025-08-13T18:03:05.2119873Z    |
2025-08-13T18:03:05.2120034Z    = help: Organize imports
2025-08-13T18:03:05.2120166Z 
2025-08-13T18:03:05.2120358Z src/easy_glm/core/__init__.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2120689Z    |
2025-08-13T18:03:05.2120879Z  1 | / from .blueprint import generate_blueprint
2025-08-13T18:03:05.2121257Z  2 | | from .data import load_external_dataframe
2025-08-13T18:03:05.2121561Z  3 | | from .model import fit_lasso_glm, predict_with_model
2025-08-13T18:03:05.2121850Z  4 | | from .prepare import prepare_data
2025-08-13T18:03:05.2122099Z  5 | | from .ratetable import ratetable
2025-08-13T18:03:05.2122373Z  6 | | from .all_ratetables import generate_all_ratetables
2025-08-13T18:03:05.2122669Z  7 | | from .plots import plot_all_ratetables
2025-08-13T18:03:05.2122987Z  8 | | from .transforms import o_matrix, lump_fun, lump_rare_levels_pl
2025-08-13T18:03:05.2123334Z    | |_______________________________________________________________^ I001
2025-08-13T18:03:05.2123590Z  9 |
2025-08-13T18:03:05.2123732Z 10 |   __all__ = [
2025-08-13T18:03:05.2123901Z    |
2025-08-13T18:03:05.2124053Z    = help: Organize imports
2025-08-13T18:03:05.2124193Z 
2025-08-13T18:03:05.2124428Z src/easy_glm/core/all_ratetables.py:1:1: UP035 `typing.Dict` is deprecated, use `dict` instead
2025-08-13T18:03:05.2124813Z   |
2025-08-13T18:03:05.2124981Z 1 | from typing import Dict, Any, List
2025-08-13T18:03:05.2125222Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2125448Z 2 | import polars as pl
2025-08-13T18:03:05.2125680Z 3 | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2125916Z   |
2025-08-13T18:03:05.2126001Z 
2025-08-13T18:03:05.2126227Z src/easy_glm/core/all_ratetables.py:1:1: UP035 `typing.List` is deprecated, use `list` instead
2025-08-13T18:03:05.2126597Z   |
2025-08-13T18:03:05.2126763Z 1 | from typing import Dict, Any, List
2025-08-13T18:03:05.2126998Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2127221Z 2 | import polars as pl
2025-08-13T18:03:05.2127446Z 3 | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2127684Z   |
2025-08-13T18:03:05.2127770Z 
2025-08-13T18:03:05.2127984Z src/easy_glm/core/all_ratetables.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2128339Z   |
2025-08-13T18:03:05.2128629Z 1 | / from typing import Dict, Any, List
2025-08-13T18:03:05.2128865Z 2 | | import polars as pl
2025-08-13T18:03:05.2129201Z 3 | | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2129477Z 4 | | from .prepare import prepare_data
2025-08-13T18:03:05.2129719Z 5 | | from .ratetable import ratetable
2025-08-13T18:03:05.2129951Z   | |________________________________^ I001
2025-08-13T18:03:05.2130161Z 6 |
2025-08-13T18:03:05.2130329Z 7 |   def generate_all_ratetables(
2025-08-13T18:03:05.2130530Z   |
2025-08-13T18:03:05.2130688Z   = help: Organize imports
2025-08-13T18:03:05.2130817Z 
2025-08-13T18:03:05.2131176Z src/easy_glm/core/all_ratetables.py:10:26: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2131587Z    |
2025-08-13T18:03:05.2131776Z  8 |     model: GeneralizedLinearRegressor,
2025-08-13T18:03:05.2132025Z  9 |     dataset: pl.DataFrame,
2025-08-13T18:03:05.2132256Z 10 |     predictor_variables: List[str],
2025-08-13T18:03:05.2132493Z    |                          ^^^^ UP006
2025-08-13T18:03:05.2132729Z 11 |     blueprint: Dict[str, Any],
2025-08-13T18:03:05.2132953Z 12 |     random_seed: int = 42,
2025-08-13T18:03:05.2133159Z    |
2025-08-13T18:03:05.2133320Z    = help: Replace with `list`
2025-08-13T18:03:05.2133465Z 
2025-08-13T18:03:05.2133698Z src/easy_glm/core/all_ratetables.py:11:16: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2134076Z    |
2025-08-13T18:03:05.2134228Z  9 |     dataset: pl.DataFrame,
2025-08-13T18:03:05.2134455Z 10 |     predictor_variables: List[str],
2025-08-13T18:03:05.2134690Z 11 |     blueprint: Dict[str, Any],
2025-08-13T18:03:05.2134903Z    |                ^^^^ UP006
2025-08-13T18:03:05.2135095Z 12 |     random_seed: int = 42,
2025-08-13T18:03:05.2135310Z 13 | ) -> Dict[str, pl.DataFrame]:
2025-08-13T18:03:05.2135511Z    |
2025-08-13T18:03:05.2135667Z    = help: Replace with `dict`
2025-08-13T18:03:05.2135801Z 
2025-08-13T18:03:05.2136037Z src/easy_glm/core/all_ratetables.py:13:6: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2136410Z    |
2025-08-13T18:03:05.2136568Z 11 |     blueprint: Dict[str, Any],
2025-08-13T18:03:05.2136783Z 12 |     random_seed: int = 42,
2025-08-13T18:03:05.2136999Z 13 | ) -> Dict[str, pl.DataFrame]:
2025-08-13T18:03:05.2137205Z    |      ^^^^ UP006
2025-08-13T18:03:05.2137483Z 14 |     """Generate rate tables for each predictor in predictor_variables."""
2025-08-13T18:03:05.2137840Z 15 |     all_ratetables: Dict[str, pl.DataFrame] = {}
2025-08-13T18:03:05.2138087Z    |
2025-08-13T18:03:05.2138269Z    = help: Replace with `dict`
2025-08-13T18:03:05.2138405Z 
2025-08-13T18:03:05.2138634Z src/easy_glm/core/all_ratetables.py:15:21: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2139006Z    |
2025-08-13T18:03:05.2139159Z 13 | ) -> Dict[str, pl.DataFrame]:
2025-08-13T18:03:05.2139471Z 14 |     """Generate rate tables for each predictor in predictor_variables."""
2025-08-13T18:03:05.2139821Z 15 |     all_ratetables: Dict[str, pl.DataFrame] = {}
2025-08-13T18:03:05.2140082Z    |                     ^^^^ UP006
2025-08-13T18:03:05.2140308Z 16 |     for var in predictor_variables:
2025-08-13T18:03:05.2140553Z 17 |         levels = blueprint.get(var)
2025-08-13T18:03:05.2140773Z    |
2025-08-13T18:03:05.2140927Z    = help: Replace with `dict`
2025-08-13T18:03:05.2141333Z 
2025-08-13T18:03:05.2141564Z src/easy_glm/core/blueprint.py:1:1: UP035 `typing.Dict` is deprecated, use `dict` instead
2025-08-13T18:03:05.2141923Z   |
2025-08-13T18:03:05.2142087Z 1 | from typing import Dict, Any
2025-08-13T18:03:05.2142299Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2142520Z 2 | import numpy as np
2025-08-13T18:03:05.2142713Z 3 | import polars as pl
2025-08-13T18:03:05.2142889Z   |
2025-08-13T18:03:05.2142968Z 
2025-08-13T18:03:05.2143176Z src/easy_glm/core/blueprint.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2143524Z   |
2025-08-13T18:03:05.2143691Z 1 | / from typing import Dict, Any
2025-08-13T18:03:05.2144052Z 2 | | import numpy as np
2025-08-13T18:03:05.2144256Z 3 | | import polars as pl
2025-08-13T18:03:05.2157624Z 4 | | from .transforms import lump_rare_levels_pl
2025-08-13T18:03:05.2158048Z   | |___________________________________________^ I001
2025-08-13T18:03:05.2158301Z 5 |
2025-08-13T18:03:05.2158649Z 6 |   def generate_blueprint(dataframe: pl.DataFrame, threshold: float = 0.0025) -> Dict[str, Any]:
2025-08-13T18:03:05.2159043Z   |
2025-08-13T18:03:05.2159207Z   = help: Organize imports
2025-08-13T18:03:05.2159347Z 
2025-08-13T18:03:05.2159590Z src/easy_glm/core/blueprint.py:6:79: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2159977Z   |
2025-08-13T18:03:05.2160167Z 4 | from .transforms import lump_rare_levels_pl
2025-08-13T18:03:05.2160411Z 5 |
2025-08-13T18:03:05.2160739Z 6 | def generate_blueprint(dataframe: pl.DataFrame, threshold: float = 0.0025) -> Dict[str, Any]:
2025-08-13T18:03:05.2161350Z   |                                                                               ^^^^ UP006
2025-08-13T18:03:05.2161683Z 7 |     """Generate preprocessing blueprint for each column.
2025-08-13T18:03:05.2161954Z   |
2025-08-13T18:03:05.2162121Z   = help: Replace with `dict`
2025-08-13T18:03:05.2162293Z 
2025-08-13T18:03:05.2162527Z src/easy_glm/core/blueprint.py:12:16: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2162894Z    |
2025-08-13T18:03:05.2163178Z 10 |     Categorical columns -> retained levels after lumping rare ones to 'Other'.
2025-08-13T18:03:05.2163519Z 11 |     """
2025-08-13T18:03:05.2163704Z 12 |     blueprint: Dict[str, Any] = {}
2025-08-13T18:03:05.2163951Z    |                ^^^^ UP006
2025-08-13T18:03:05.2164175Z 13 |     for column in dataframe.columns:
2025-08-13T18:03:05.2164410Z 14 |         try:
2025-08-13T18:03:05.2164567Z    |
2025-08-13T18:03:05.2164732Z    = help: Replace with `dict`
2025-08-13T18:03:05.2164871Z 
2025-08-13T18:03:05.2165060Z src/easy_glm/core/data.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2165393Z   |
2025-08-13T18:03:05.2165560Z 1 | / from typing import Union
2025-08-13T18:03:05.2165777Z 2 | | import urllib.request
2025-08-13T18:03:05.2165988Z 3 | | import polars as pl
2025-08-13T18:03:05.2166186Z 4 | | import pandas as pd
2025-08-13T18:03:05.2166377Z 5 | | import rdata
2025-08-13T18:03:05.2166553Z   | |____________^ I001
2025-08-13T18:03:05.2166731Z 6 |
2025-08-13T18:03:05.2166926Z 7 |   def load_external_dataframe() -> pl.DataFrame:
2025-08-13T18:03:05.2167183Z   |
2025-08-13T18:03:05.2167341Z   = help: Organize imports
2025-08-13T18:03:05.2167483Z 
2025-08-13T18:03:05.2167666Z src/easy_glm/core/data.py:14:9: UP007 [*] Use `X | Y` for type annotations
2025-08-13T18:03:05.2167986Z    |
2025-08-13T18:03:05.2168181Z 12 |     parsed_data = rdata.parser.parse_data(data)
2025-08-13T18:03:05.2168514Z 13 |     converted_data = rdata.conversion.convert(parsed_data)
2025-08-13T18:03:05.2168906Z 14 |     df: Union[pd.DataFrame, pl.DataFrame] = converted_data["freMTPL2freq"]
2025-08-13T18:03:05.2169255Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP007
2025-08-13T18:03:05.2169532Z 15 |     if isinstance(df, pd.DataFrame):
2025-08-13T18:03:05.2169849Z 16 |         df = pl.from_pandas(df)
2025-08-13T18:03:05.2170188Z    |
2025-08-13T18:03:05.2173229Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2173509Z 
2025-08-13T18:03:05.2173855Z src/easy_glm/core/model.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2174385Z    |
2025-08-13T18:03:05.2174638Z  1 | / from typing import Optional
2025-08-13T18:03:05.2175002Z  2 | | import numpy as np
2025-08-13T18:03:05.2196008Z  3 | | import pandas as pd
2025-08-13T18:03:05.2196342Z  4 | | import pandas.api.types as ptypes
2025-08-13T18:03:05.2196623Z  5 | | import dask.dataframe as dd
2025-08-13T18:03:05.2196905Z  6 | | from dask_ml.preprocessing import Categorizer
2025-08-13T18:03:05.2197216Z  7 | | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2197481Z  8 | | import polars as pl
2025-08-13T18:03:05.2197894Z    | |___________________^ I001
2025-08-13T18:03:05.2198080Z  9 |
2025-08-13T18:03:05.2198231Z 10 |   def fit_lasso_glm(
2025-08-13T18:03:05.2198511Z    |
2025-08-13T18:03:05.2198677Z    = help: Organize imports
2025-08-13T18:03:05.2198818Z 
2025-08-13T18:03:05.2199009Z src/easy_glm/core/model.py:15:17: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2199330Z    |
2025-08-13T18:03:05.2199486Z 13 |     train_test_col: str,
2025-08-13T18:03:05.2199690Z 14 |     model_type: str,
2025-08-13T18:03:05.2199903Z 15 |     weight_col: Optional[str] = None,
2025-08-13T18:03:05.2200142Z    |                 ^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2200386Z 16 |     DivideTargetByWeight: bool = False,
2025-08-13T18:03:05.2200646Z 17 | ) -> GeneralizedLinearRegressor:
2025-08-13T18:03:05.2200861Z    |
2025-08-13T18:03:05.2201181Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2201332Z 
2025-08-13T18:03:05.2201572Z src/easy_glm/core/model.py:16:5: N803 Argument name `DivideTargetByWeight` should be lowercase
2025-08-13T18:03:05.2201945Z    |
2025-08-13T18:03:05.2202094Z 14 |     model_type: str,
2025-08-13T18:03:05.2202306Z 15 |     weight_col: Optional[str] = None,
2025-08-13T18:03:05.2202561Z 16 |     DivideTargetByWeight: bool = False,
2025-08-13T18:03:05.2202802Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ N803
2025-08-13T18:03:05.2203042Z 17 | ) -> GeneralizedLinearRegressor:
2025-08-13T18:03:05.2203329Z 18 |     """Fit a L1-regularized GLM (Poisson/Gamma) using glum."""
2025-08-13T18:03:05.2203597Z    |
2025-08-13T18:03:05.2203678Z 
2025-08-13T18:03:05.2203867Z src/easy_glm/core/model.py:60:5: N806 Variable `X` in function should be lowercase
2025-08-13T18:03:05.2204189Z    |
2025-08-13T18:03:05.2204341Z 58 |         train_df = ddf.compute()
2025-08-13T18:03:05.2204619Z 59 |     features = [c for c in train_df.columns if c not in exclude]
2025-08-13T18:03:05.2204908Z 60 |     X = train_df[features]
2025-08-13T18:03:05.2205098Z    |     ^ N806
2025-08-13T18:03:05.2205287Z 61 |     y = train_df[target].to_numpy().ravel()
2025-08-13T18:03:05.2205604Z 62 |     sw = train_df[weight_col].to_numpy().ravel() if weight_col else None
2025-08-13T18:03:05.2205899Z    |
2025-08-13T18:03:05.2205980Z 
2025-08-13T18:03:05.2206165Z src/easy_glm/core/plots.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2206485Z   |
2025-08-13T18:03:05.2206635Z 1 | / import polars as pl
2025-08-13T18:03:05.2206844Z 2 | | import matplotlib.pyplot as plt
2025-08-13T18:03:05.2207071Z 3 | | import seaborn as sns
2025-08-13T18:03:05.2207276Z 4 | | from typing import Dict, Any
2025-08-13T18:03:05.2207500Z   | |____________________________^ I001
2025-08-13T18:03:05.2207706Z 5 |
2025-08-13T18:03:05.2208087Z 6 |   def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):  # pragma: no cover - visual
2025-08-13T18:03:05.2208521Z   |
2025-08-13T18:03:05.2208683Z   = help: Organize imports
2025-08-13T18:03:05.2208810Z 
2025-08-13T18:03:05.2209016Z src/easy_glm/core/plots.py:4:1: UP035 `typing.Dict` is deprecated, use `dict` instead
2025-08-13T18:03:05.2209361Z   |
2025-08-13T18:03:05.2209523Z 2 | import matplotlib.pyplot as plt
2025-08-13T18:03:05.2209759Z 3 | import seaborn as sns
2025-08-13T18:03:05.2209963Z 4 | from typing import Dict, Any
2025-08-13T18:03:05.2210173Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2210378Z 5 |
2025-08-13T18:03:05.2210746Z 6 | def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):  # pragma: no cover - visual
2025-08-13T18:03:05.2211371Z   |
2025-08-13T18:03:05.2211456Z 
2025-08-13T18:03:05.2211670Z src/easy_glm/core/plots.py:6:37: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2212021Z   |
2025-08-13T18:03:05.2212175Z 4 | from typing import Dict, Any
2025-08-13T18:03:05.2212376Z 5 |
2025-08-13T18:03:05.2212742Z 6 | def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):  # pragma: no cover - visual
2025-08-13T18:03:05.2213330Z   |                                     ^^^^ UP006
2025-08-13T18:03:05.2213814Z 7 |     """Plot relativity curves for each rate table (line for numeric, bar for categorical)."""
2025-08-13T18:03:05.2214217Z 8 |     for var_name, table in all_tables.items():
2025-08-13T18:03:05.2214453Z   |
2025-08-13T18:03:05.2214609Z   = help: Replace with `dict`
2025-08-13T18:03:05.2214756Z 
2025-08-13T18:03:05.2214962Z src/easy_glm/core/plots.py:6:73: UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-08-13T18:03:05.2215365Z   |
2025-08-13T18:03:05.2215523Z 4 | from typing import Dict, Any
2025-08-13T18:03:05.2215725Z 5 |
2025-08-13T18:03:05.2216088Z 6 | def plot_all_ratetables(all_tables: Dict[str, pl.DataFrame], blueprint: Dict[str, Any]):  # pragma: no cover - visual
2025-08-13T18:03:05.2216556Z   |                                                                         ^^^^ UP006
2025-08-13T18:03:05.2216945Z 7 |     """Plot relativity curves for each rate table (line for numeric, bar for categorical)."""
2025-08-13T18:03:05.2217341Z 8 |     for var_name, table in all_tables.items():
2025-08-13T18:03:05.2217579Z   |
2025-08-13T18:03:05.2217735Z   = help: Replace with `dict`
2025-08-13T18:03:05.2217872Z 
2025-08-13T18:03:05.2218092Z src/easy_glm/core/plots.py:13:26: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2218441Z    |
2025-08-13T18:03:05.2218593Z 11 |             continue
2025-08-13T18:03:05.2218792Z 12 |         plt.figure(figsize=(10, 6))
2025-08-13T18:03:05.2219154Z 13 |         is_numeric = all(isinstance(x, (int, float)) for x in blueprint.get(var_name, []))
2025-08-13T18:03:05.2219518Z    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2219756Z 14 |         if is_numeric:
2025-08-13T18:03:05.2219980Z 15 |             sorted_table = table.sort(var_name)
2025-08-13T18:03:05.2220210Z    |
2025-08-13T18:03:05.2220372Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2220505Z 
2025-08-13T18:03:05.2220713Z src/easy_glm/core/prepare.py:1:1: UP035 `typing.List` is deprecated, use `list` instead
2025-08-13T18:03:05.2221262Z   |
2025-08-13T18:03:05.2221440Z 1 | from typing import List, Optional
2025-08-13T18:03:05.2221670Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2221895Z 2 | import duckdb
2025-08-13T18:03:05.2222074Z 3 | import polars as pl
2025-08-13T18:03:05.2222254Z   |
2025-08-13T18:03:05.2222337Z 
2025-08-13T18:03:05.2222531Z src/easy_glm/core/prepare.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2222887Z   |
2025-08-13T18:03:05.2223051Z 1 | / from typing import List, Optional
2025-08-13T18:03:05.2223279Z 2 | | import duckdb
2025-08-13T18:03:05.2223456Z 3 | | import polars as pl
2025-08-13T18:03:05.2223688Z 4 | | from .transforms import o_matrix, lump_fun
2025-08-13T18:03:05.2223955Z   | |__________________________________________^ I001
2025-08-13T18:03:05.2224174Z 5 |
2025-08-13T18:03:05.2224326Z 6 |   def prepare_data(
2025-08-13T18:03:05.2224496Z   |
2025-08-13T18:03:05.2224656Z   = help: Organize imports
2025-08-13T18:03:05.2224784Z 
2025-08-13T18:03:05.2224998Z src/easy_glm/core/prepare.py:7:26: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2225354Z   |
2025-08-13T18:03:05.2225500Z 6 | def prepare_data(
2025-08-13T18:03:05.2225699Z 7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2225929Z   |                          ^^^^ UP006
2025-08-13T18:03:05.2226177Z 8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2226470Z 9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2226700Z   |
2025-08-13T18:03:05.2226858Z   = help: Replace with `list`
2025-08-13T18:03:05.2226993Z 
2025-08-13T18:03:05.2227179Z src/easy_glm/core/prepare.py:8:25: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2227508Z    |
2025-08-13T18:03:05.2227659Z  6 | def prepare_data(
2025-08-13T18:03:05.2227863Z  7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2228145Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2228540Z    |                         ^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2228902Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2229170Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2229397Z    |
2025-08-13T18:03:05.2229556Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2229705Z 
2025-08-13T18:03:05.2229925Z src/easy_glm/core/prepare.py:8:34: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2230281Z    |
2025-08-13T18:03:05.2230429Z  6 | def prepare_data(
2025-08-13T18:03:05.2230633Z  7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2230899Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2231390Z    |                                  ^^^^ UP006
2025-08-13T18:03:05.2231639Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2231901Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2232121Z    |
2025-08-13T18:03:05.2232293Z    = help: Replace with `list`
2025-08-13T18:03:05.2232433Z 
2025-08-13T18:03:05.2232630Z src/easy_glm/core/prepare.py:9:23: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2232957Z    |
2025-08-13T18:03:05.2233131Z  7 |     modelling_variables: List[str],
2025-08-13T18:03:05.2233408Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2233689Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2233932Z    |                       ^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2234184Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2234423Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2234635Z    |
2025-08-13T18:03:05.2234795Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2234936Z 
2025-08-13T18:03:05.2235122Z src/easy_glm/core/prepare.py:10:9: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2235448Z    |
2025-08-13T18:03:05.2235629Z  8 |     additional_columns: Optional[List[str]] = None,
2025-08-13T18:03:05.2235913Z  9 |     traintest_column: Optional[str] = None,
2025-08-13T18:03:05.2236162Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2236402Z    |         ^^^^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2236629Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2236849Z 12 |     formats: dict = {},
2025-08-13T18:03:05.2237038Z    |
2025-08-13T18:03:05.2237189Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2237328Z 
2025-08-13T18:03:05.2237565Z src/easy_glm/core/prepare.py:12:21: B006 Do not use mutable data structures for argument defaults
2025-08-13T18:03:05.2237926Z    |
2025-08-13T18:03:05.2238092Z 10 |     df: Optional[pl.DataFrame] = None,
2025-08-13T18:03:05.2238381Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2238602Z 12 |     formats: dict = {},
2025-08-13T18:03:05.2238799Z    |                     ^^ B006
2025-08-13T18:03:05.2239043Z 13 |     con: Optional[duckdb.DuckDBPyConnection] = None,
2025-08-13T18:03:05.2239324Z 14 | ) -> pl.DataFrame:
2025-08-13T18:03:05.2239500Z    |
2025-08-13T18:03:05.2239706Z    = help: Replace with `None`; initialize within function
2025-08-13T18:03:05.2239910Z 
2025-08-13T18:03:05.2240100Z src/easy_glm/core/prepare.py:13:10: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2240427Z    |
2025-08-13T18:03:05.2240579Z 11 |     table_name: str = "dataset",
2025-08-13T18:03:05.2240802Z 12 |     formats: dict = {},
2025-08-13T18:03:05.2241233Z 13 |     con: Optional[duckdb.DuckDBPyConnection] = None,
2025-08-13T18:03:05.2241515Z    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2241752Z 14 | ) -> pl.DataFrame:
2025-08-13T18:03:05.2242032Z 15 |     """Apply blueprint-driven SQL style transformations via DuckDB."""
2025-08-13T18:03:05.2242344Z    |
2025-08-13T18:03:05.2242499Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2242647Z 
2025-08-13T18:03:05.2242863Z src/easy_glm/core/prepare.py:31:18: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2243373Z    |
2025-08-13T18:03:05.2243602Z 29 |             f"Available tables are: {', '.join([t[0] for t in tables])}"
2025-08-13T18:03:05.2243998Z 30 |         )
2025-08-13T18:03:05.2244199Z 31 |     expressions: List[str] = []
2025-08-13T18:03:05.2244422Z    |                  ^^^^ UP006
2025-08-13T18:03:05.2244642Z 32 |     if additional_columns is None:
2025-08-13T18:03:05.2244875Z 33 |         additional_columns = []
2025-08-13T18:03:05.2245079Z    |
2025-08-13T18:03:05.2245236Z    = help: Replace with `list`
2025-08-13T18:03:05.2245380Z 
2025-08-13T18:03:05.2245602Z src/easy_glm/core/prepare.py:42:20: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2245961Z    |
2025-08-13T18:03:05.2246111Z 40 |         if var in formats:
2025-08-13T18:03:05.2246331Z 41 |             dict_values = formats[var]
2025-08-13T18:03:05.2246621Z 42 |             if all(isinstance(x, (int, float)) for x in dict_values):
2025-08-13T18:03:05.2246710Z    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2246836Z 43 |                 expressions.extend(o_matrix(var, dict_values))
2025-08-13T18:03:05.2246904Z 44 |             else:
2025-08-13T18:03:05.2246961Z    |
2025-08-13T18:03:05.2247044Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2247048Z 
2025-08-13T18:03:05.2247319Z src/easy_glm/core/ratetable.py:1:1: UP035 [*] Import from `collections.abc` instead: `Sequence`, `Callable`
2025-08-13T18:03:05.2247376Z   |
2025-08-13T18:03:05.2247504Z 1 | from typing import Optional, Sequence, Callable, Any
2025-08-13T18:03:05.2247586Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2247662Z 2 | import polars as pl
2025-08-13T18:03:05.2247739Z 3 | import pandas as pd
2025-08-13T18:03:05.2247797Z   |
2025-08-13T18:03:05.2247888Z   = help: Import from `collections.abc`
2025-08-13T18:03:05.2247892Z 
2025-08-13T18:03:05.2248102Z src/easy_glm/core/ratetable.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2248170Z    |
2025-08-13T18:03:05.2248298Z  1 | / from typing import Optional, Sequence, Callable, Any
2025-08-13T18:03:05.2248374Z  2 | | import polars as pl
2025-08-13T18:03:05.2248455Z  3 | | import pandas as pd
2025-08-13T18:03:05.2248551Z  4 | | import pandas.api.types as ptypes
2025-08-13T18:03:05.2248624Z  5 | | import numpy as np
2025-08-13T18:03:05.2248710Z  6 | | import dask.dataframe as dd
2025-08-13T18:03:05.2248824Z  7 | | from dask_ml.preprocessing import Categorizer
2025-08-13T18:03:05.2248930Z  8 | | from glum import GeneralizedLinearRegressor
2025-08-13T18:03:05.2249000Z  9 | | import functools
2025-08-13T18:03:05.2249074Z    | |________________^ I001
2025-08-13T18:03:05.2249132Z 10 |
2025-08-13T18:03:05.2249263Z 11 |   def typechecked_ratetable(func: Callable) -> Callable:
2025-08-13T18:03:05.2249326Z    |
2025-08-13T18:03:05.2249402Z    = help: Organize imports
2025-08-13T18:03:05.2249407Z 
2025-08-13T18:03:05.2249583Z src/easy_glm/core/ratetable.py:3:18: F401 [*] `pandas` imported but unused
2025-08-13T18:03:05.2249645Z   |
2025-08-13T18:03:05.2249805Z 1 | from typing import Optional, Sequence, Callable, Any
2025-08-13T18:03:05.2249885Z 2 | import polars as pl
2025-08-13T18:03:05.2249957Z 3 | import pandas as pd
2025-08-13T18:03:05.2250029Z   |                  ^^ F401
2025-08-13T18:03:05.2250120Z 4 | import pandas.api.types as ptypes
2025-08-13T18:03:05.2250192Z 5 | import numpy as np
2025-08-13T18:03:05.2250254Z   |
2025-08-13T18:03:05.2250342Z   = help: Remove unused import: `pandas`
2025-08-13T18:03:05.2250348Z 
2025-08-13T18:03:05.2250578Z src/easy_glm/core/ratetable.py:20:39: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2250637Z    |
2025-08-13T18:03:05.2250798Z 18 |         if "col_name" in kwargs and not isinstance(kwargs["col_name"], str):
2025-08-13T18:03:05.2250905Z 19 |             raise TypeError("col_name must be a string")
2025-08-13T18:03:05.2251304Z 20 |         if "levels" in kwargs and not isinstance(kwargs["levels"], (list, tuple, np.ndarray)):
2025-08-13T18:03:05.2251564Z    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2251771Z 21 |             raise TypeError("levels must be a sequence")
2025-08-13T18:03:05.2251857Z 22 |         return func(*args, **kwargs)
2025-08-13T18:03:05.2251920Z    |
2025-08-13T18:03:05.2251999Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2252005Z 
2025-08-13T18:03:05.2252202Z src/easy_glm/core/ratetable.py:32:14: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2252265Z    |
2025-08-13T18:03:05.2252335Z 30 |     col_name: str,
2025-08-13T18:03:05.2252410Z 31 |     levels: Sequence[Any],
2025-08-13T18:03:05.2252571Z 32 |     prepare: Optional[Callable[[pl.DataFrame], pl.DataFrame]] = None,
2025-08-13T18:03:05.2252671Z    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2252762Z 33 |     random_seed: Optional[int] = None,
2025-08-13T18:03:05.2252842Z 34 |     include_raw: bool = True,
2025-08-13T18:03:05.2252913Z    |
2025-08-13T18:03:05.2252993Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2252998Z 
2025-08-13T18:03:05.2253192Z src/easy_glm/core/ratetable.py:33:18: UP045 [*] Use `X | None` for type annotations
2025-08-13T18:03:05.2253262Z    |
2025-08-13T18:03:05.2253337Z 31 |     levels: Sequence[Any],
2025-08-13T18:03:05.2253494Z 32 |     prepare: Optional[Callable[[pl.DataFrame], pl.DataFrame]] = None,
2025-08-13T18:03:05.2253581Z 33 |     random_seed: Optional[int] = None,
2025-08-13T18:03:05.2253661Z    |                  ^^^^^^^^^^^^^ UP045
2025-08-13T18:03:05.2253740Z 34 |     include_raw: bool = True,
2025-08-13T18:03:05.2253816Z 35 | ) -> pl.DataFrame:
2025-08-13T18:03:05.2253880Z    |
2025-08-13T18:03:05.2253957Z    = help: Convert to `X | None`
2025-08-13T18:03:05.2253962Z 
2025-08-13T18:03:05.2254184Z src/easy_glm/core/transforms.py:1:1: UP035 `typing.List` is deprecated, use `list` instead
2025-08-13T18:03:05.2254247Z   |
2025-08-13T18:03:05.2254327Z 1 | from typing import List
2025-08-13T18:03:05.2254401Z   | ^^^^^^^^^^^^^^^^^^^^^^^ UP035
2025-08-13T18:03:05.2254475Z 2 | import numpy as np
2025-08-13T18:03:05.2254561Z 3 | import polars as pl
2025-08-13T18:03:05.2254619Z   |
2025-08-13T18:03:05.2254624Z 
2025-08-13T18:03:05.2254826Z src/easy_glm/core/transforms.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2254890Z   |
2025-08-13T18:03:05.2254966Z 1 | / from typing import List
2025-08-13T18:03:05.2255043Z 2 | | import numpy as np
2025-08-13T18:03:05.2255125Z 3 | | import polars as pl
2025-08-13T18:03:05.2255202Z   | |___________________^ I001
2025-08-13T18:03:05.2255262Z 4 |
2025-08-13T18:03:05.2255374Z 5 |   def o_matrix(col_name: str, brks) -> List[str]:
2025-08-13T18:03:05.2255439Z   |
2025-08-13T18:03:05.2255518Z   = help: Organize imports
2025-08-13T18:03:05.2255523Z 
2025-08-13T18:03:05.2255745Z src/easy_glm/core/transforms.py:5:38: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2255806Z   |
2025-08-13T18:03:05.2255883Z 3 | import polars as pl
2025-08-13T18:03:05.2255942Z 4 |
2025-08-13T18:03:05.2256046Z 5 | def o_matrix(col_name: str, brks) -> List[str]:
2025-08-13T18:03:05.2256134Z   |                                      ^^^^ UP006
2025-08-13T18:03:05.2256221Z 6 |     if not isinstance(col_name, str):
2025-08-13T18:03:05.2256326Z 7 |         raise TypeError("col_name must be a string")
2025-08-13T18:03:05.2256390Z   |
2025-08-13T18:03:05.2256464Z   = help: Replace with `list`
2025-08-13T18:03:05.2256469Z 
2025-08-13T18:03:05.2256688Z src/easy_glm/core/transforms.py:21:37: UP006 [*] Use `list` instead of `List` for type annotation
2025-08-13T18:03:05.2256750Z    |
2025-08-13T18:03:05.2256827Z 19 |     return sql_statements
2025-08-13T18:03:05.2256886Z 20 |
2025-08-13T18:03:05.2257073Z 21 | def lump_fun(col_name: str, levels: List, other_category: str = 'Other') -> str:
2025-08-13T18:03:05.2257157Z    |                                     ^^^^ UP006
2025-08-13T18:03:05.2257292Z 22 |     if not isinstance(col_name, str) or not col_name.strip():
2025-08-13T18:03:05.2257505Z 23 |         raise ValueError("col_name must be non-empty string")
2025-08-13T18:03:05.2257634Z    |
2025-08-13T18:03:05.2257714Z    = help: Replace with `list`
2025-08-13T18:03:05.2257719Z 
2025-08-13T18:03:05.2257896Z src/easy_glm/core/transforms.py:29:9: E741 Ambiguous variable name: `l`
2025-08-13T18:03:05.2257958Z    |
2025-08-13T18:03:05.2258078Z 27 |         raise ValueError("levels must be a non-empty list")
2025-08-13T18:03:05.2258145Z 28 |     cleaned = []
2025-08-13T18:03:05.2258216Z 29 |     for l in levels:
2025-08-13T18:03:05.2258284Z    |         ^ E741
2025-08-13T18:03:05.2258351Z 30 |         if l is None:
2025-08-13T18:03:05.2258455Z 31 |             raise ValueError("None level not allowed")
2025-08-13T18:03:05.2258517Z    |
2025-08-13T18:03:05.2258522Z 
2025-08-13T18:03:05.2258660Z test.py:6:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2258718Z    |
2025-08-13T18:03:05.2258798Z  6 | / import polars as pl
2025-08-13T18:03:05.2258882Z  7 | | import numpy as np
2025-08-13T18:03:05.2258951Z  8 | | import easy_glm
2025-08-13T18:03:05.2259021Z    | |_______________^ I001
2025-08-13T18:03:05.2259088Z  9 |
2025-08-13T18:03:05.2259192Z 10 |   raw = easy_glm.load_external_dataframe()
2025-08-13T18:03:05.2259250Z    |
2025-08-13T18:03:05.2259326Z    = help: Organize imports
2025-08-13T18:03:05.2259336Z 
2025-08-13T18:03:05.2259528Z tests/test_blueprint.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2259586Z   |
2025-08-13T18:03:05.2259663Z 1 | / import polars as pl
2025-08-13T18:03:05.2259799Z 2 | | from easy_glm.core.blueprint import generate_blueprint
2025-08-13T18:03:05.2259924Z 3 | | from easy_glm.core.data import load_external_dataframe
2025-08-13T18:03:05.2260026Z   | |______________________________________________________^ I001
2025-08-13T18:03:05.2260089Z 4 |
2025-08-13T18:03:05.2260180Z 5 |   def test_generate_blueprint_basic():
2025-08-13T18:03:05.2260239Z   |
2025-08-13T18:03:05.2260318Z   = help: Organize imports
2025-08-13T18:03:05.2260328Z 
2025-08-13T18:03:05.2260491Z tests/test_blueprint.py:1:18: F401 [*] `polars` imported but unused
2025-08-13T18:03:05.2260550Z   |
2025-08-13T18:03:05.2260623Z 1 | import polars as pl
2025-08-13T18:03:05.2260696Z   |                  ^^ F401
2025-08-13T18:03:05.2260823Z 2 | from easy_glm.core.blueprint import generate_blueprint
2025-08-13T18:03:05.2260943Z 3 | from easy_glm.core.data import load_external_dataframe
2025-08-13T18:03:05.2261191Z   |
2025-08-13T18:03:05.2261294Z   = help: Remove unused import: `polars`
2025-08-13T18:03:05.2261300Z 
2025-08-13T18:03:05.2261504Z tests/test_blueprint.py:17:16: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2261563Z    |
2025-08-13T18:03:05.2261671Z 15 |         assert isinstance(blueprint[col], list)
2025-08-13T18:03:05.2261855Z 16 |         # Numeric columns should have floats/ints, categoricals should have strings
2025-08-13T18:03:05.2261994Z 17 |         if all(isinstance(x, (float, int)) for x in blueprint[col]):
2025-08-13T18:03:05.2262088Z    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2262244Z 18 |             assert all(isinstance(x, (float, int)) for x in blueprint[col])
2025-08-13T18:03:05.2262309Z 19 |         else:
2025-08-13T18:03:05.2262372Z    |
2025-08-13T18:03:05.2262452Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2262457Z 
2025-08-13T18:03:05.2262652Z tests/test_blueprint.py:18:24: UP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`
2025-08-13T18:03:05.2262716Z    |
2025-08-13T18:03:05.2262898Z 16 |         # Numeric columns should have floats/ints, categoricals should have strings
2025-08-13T18:03:05.2263030Z 17 |         if all(isinstance(x, (float, int)) for x in blueprint[col]):
2025-08-13T18:03:05.2263178Z 18 |             assert all(isinstance(x, (float, int)) for x in blueprint[col])
2025-08-13T18:03:05.2263273Z    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ UP038
2025-08-13T18:03:05.2263466Z 19 |         else:
2025-08-13T18:03:05.2263598Z 20 |             assert all(isinstance(x, str) for x in blueprint[col])
2025-08-13T18:03:05.2263664Z    |
2025-08-13T18:03:05.2263836Z    = help: Convert to `X | Y`
2025-08-13T18:03:05.2263843Z 
2025-08-13T18:03:05.2264047Z tests/test_model_and_ratetable.py:1:1: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2264109Z   |
2025-08-13T18:03:05.2264186Z 1 | / import numpy as np
2025-08-13T18:03:05.2264261Z 2 | | import polars as pl
2025-08-13T18:03:05.2264386Z 3 | | from easy_glm.core.data import load_external_dataframe
2025-08-13T18:03:05.2264649Z 4 | | from easy_glm import generate_blueprint, prepare_data, fit_lasso_glm, ratetable, predict_with_model
2025-08-13T18:03:05.2264805Z   | |___________________________________________________________________________________________________^ I001
2025-08-13T18:03:05.2264864Z   |
2025-08-13T18:03:05.2264945Z   = help: Organize imports
2025-08-13T18:03:05.2264950Z 
2025-08-13T18:03:05.2265155Z tests/test_model_and_ratetable.py:87:5: I001 [*] Import block is un-sorted or un-formatted
2025-08-13T18:03:05.2265214Z    |
2025-08-13T18:03:05.2265323Z 86 | def test_transforms_helpers_roundtrip():
2025-08-13T18:03:05.2265457Z 87 |     from easy_glm.core.transforms import o_matrix, lump_fun
2025-08-13T18:03:05.2265543Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ I001
2025-08-13T18:03:05.2265610Z 88 |
2025-08-13T18:03:05.2265681Z 89 |     breaks = [1, 2, 3]
2025-08-13T18:03:05.2265739Z    |
2025-08-13T18:03:05.2265812Z    = help: Organize imports
2025-08-13T18:03:05.2265817Z 
2025-08-13T18:03:05.2265888Z Found 120 errors.
2025-08-13T18:03:05.2266164Z [*] 89 fixable with the `--fix` option (13 hidden fixes can be enabled with the `--unsafe-fixes` option).
2025-08-13T18:03:05.2275311Z ##[error]Process completed with exit code 1.
2025-08-13T18:03:05.2377686Z ##[group]Run codecov/codecov-action@v4
2025-08-13T18:03:05.2377954Z with:
2025-08-13T18:03:05.2378125Z   fail_ci_if_error: false
2025-08-13T18:03:05.2378332Z env:
2025-08-13T18:03:05.2378552Z   pythonLocation: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.2378945Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib/pkgconfig
2025-08-13T18:03:05.2379325Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.2379650Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.2379977Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:05.2380302Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib
2025-08-13T18:03:05.2380592Z   EASY_GLM_MAX_ROWS: 500
2025-08-13T18:03:05.2380784Z ##[endgroup]
2025-08-13T18:03:05.3202609Z eventName: push
2025-08-13T18:03:05.3210814Z ==> linux OS detected
2025-08-13T18:03:05.4808174Z https://cli.codecov.io/latest/linux/codecov.SHA256SUM
2025-08-13T18:03:05.5985474Z gpg: directory '/home/runner/.gnupg' created
2025-08-13T18:03:05.5987976Z gpg: keybox '/home/runner/.gnupg/pubring.kbx' created
2025-08-13T18:03:05.6223059Z gpg: /home/runner/.gnupg/trustdb.gpg: trustdb created
2025-08-13T18:03:05.6224240Z gpg: key 806BB28AED779869: public key "Codecov Uploader (Codecov Uploader Verification Key) <security@codecov.io>" imported
2025-08-13T18:03:05.6638447Z gpg: Total number processed: 1
2025-08-13T18:03:05.6638982Z gpg:               imported: 1
2025-08-13T18:03:05.6693658Z gpg: Signature made Wed Jul 30 21:03:11 2025 UTC
2025-08-13T18:03:05.6696083Z gpg:                using RSA key 27034E7FDB850E0BBC2C62FF806BB28AED779869
2025-08-13T18:03:05.6697175Z gpg: Good signature from "Codecov Uploader (Codecov Uploader Verification Key) <security@codecov.io>" [unknown]
2025-08-13T18:03:05.6698191Z gpg: WARNING: This key is not certified with a trusted signature!
2025-08-13T18:03:05.6698941Z gpg:          There is no indication that the signature belongs to the owner.
2025-08-13T18:03:05.6699781Z Primary key fingerprint: 2703 4E7F DB85 0E0B BC2C  62FF 806B B28A ED77 9869
2025-08-13T18:03:05.6935080Z ==> Uploader SHASUM verified (5cc89518864eaae49f3819e42ba353f9a3c676912d4472351d31970643f1a49a  codecov)
2025-08-13T18:03:05.6936394Z ==> Running version latest
2025-08-13T18:03:05.7639429Z Could not pull latest version information: SyntaxError: Unexpected token '<', "<!DOCTYPE "... is not valid JSON
2025-08-13T18:03:05.7641432Z ==> Running git config --global --add safe.directory /home/runner/work/easy_glm/easy_glm
2025-08-13T18:03:05.7729224Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/easy_glm/easy_glm
2025-08-13T18:03:05.7777541Z ==> Running command '/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov create-commit'
2025-08-13T18:03:05.7780570Z [command]/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov create-commit --git-service github
2025-08-13T18:03:06.1316808Z info - 2025-08-13 18:03:06,131 -- ci service found: github-actions
2025-08-13T18:03:06.1410161Z warning - 2025-08-13 18:03:06,140 -- No config file could be found. Ignoring config.
2025-08-13T18:03:06.1734704Z warning - 2025-08-13 18:03:06,173 -- Branch `main` is protected but no token was provided
2025-08-13T18:03:06.1736911Z warning - 2025-08-13 18:03:06,173 -- For information on Codecov upload tokens, see https://docs.codecov.com/docs/codecov-tokens
2025-08-13T18:03:06.5458958Z info - 2025-08-13 18:03:06,545 -- Process Commit creating complete
2025-08-13T18:03:06.5459771Z error - 2025-08-13 18:03:06,545 -- Commit creating failed: {"message":"Token required - not valid tokenless upload"}
2025-08-13T18:03:06.6508633Z Sentry is attempting to send 2 pending events
2025-08-13T18:03:06.6509360Z Waiting up to 2 seconds
2025-08-13T18:03:06.6509771Z Press Ctrl-C to quit
2025-08-13T18:03:06.7094854Z ==> Running command '/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov create-report'
2025-08-13T18:03:06.7097316Z [command]/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov create-report --git-service github
2025-08-13T18:03:07.0548441Z info - 2025-08-13 18:03:07,054 -- ci service found: github-actions
2025-08-13T18:03:07.0642746Z warning - 2025-08-13 18:03:07,063 -- No config file could be found. Ignoring config.
2025-08-13T18:03:07.2806415Z info - 2025-08-13 18:03:07,280 -- Process Report creating complete
2025-08-13T18:03:07.2811790Z error - 2025-08-13 18:03:07,280 -- Report creating failed: {"message":"Token required - not valid tokenless upload"}
2025-08-13T18:03:07.3858072Z Sentry is attempting to send 2 pending events
2025-08-13T18:03:07.3858558Z Waiting up to 2 seconds
2025-08-13T18:03:07.3858883Z Press Ctrl-C to quit
2025-08-13T18:03:07.4440047Z ==> Running command '/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov do-upload'
2025-08-13T18:03:07.4441682Z [command]/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov do-upload --git-service github
2025-08-13T18:03:07.7912332Z info - 2025-08-13 18:03:07,790 -- ci service found: github-actions
2025-08-13T18:03:07.8002240Z warning - 2025-08-13 18:03:07,799 -- No config file could be found. Ignoring config.
2025-08-13T18:03:07.8299202Z warning - 2025-08-13 18:03:07,829 -- xcrun is not installed or can't be found.
2025-08-13T18:03:07.8339941Z warning - 2025-08-13 18:03:07,833 -- No gcov data found.
2025-08-13T18:03:07.8372569Z warning - 2025-08-13 18:03:07,837 -- No coverage data found to transform
2025-08-13T18:03:07.8589562Z info - 2025-08-13 18:03:07,858 -- Found 0 coverage files to report
2025-08-13T18:03:07.8617791Z Error: No coverage reports found. Please make sure you're generating reports successfully.
2025-08-13T18:03:07.9786192Z ##[warning]Codecov:
                        Failed to properly upload report: The process '/home/runner/work/_actions/codecov/codecov-action/v4/dist/codecov' failed with exit code 1
2025-08-13T18:03:07.9919409Z ##[group]Run actions/upload-artifact@v4
2025-08-13T18:03:07.9919671Z with:
2025-08-13T18:03:07.9919832Z   name: coverage-xml
2025-08-13T18:03:07.9920025Z   path: coverage.xml
2025-08-13T18:03:07.9920219Z   if-no-files-found: warn
2025-08-13T18:03:07.9920418Z   compression-level: 6
2025-08-13T18:03:07.9920792Z   overwrite: false
2025-08-13T18:03:07.9921169Z   include-hidden-files: false
2025-08-13T18:03:07.9921530Z env:
2025-08-13T18:03:07.9921911Z   pythonLocation: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:07.9922306Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib/pkgconfig
2025-08-13T18:03:07.9922679Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:07.9923010Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:07.9923340Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
2025-08-13T18:03:07.9923665Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib
2025-08-13T18:03:07.9923978Z   EASY_GLM_MAX_ROWS: 500
2025-08-13T18:03:07.9924163Z ##[endgroup]
2025-08-13T18:03:08.2061762Z ##[warning]No files were found with the provided path: coverage.xml. No artifacts will be uploaded.
2025-08-13T18:03:08.2222048Z Post job cleanup.
2025-08-13T18:03:08.3149549Z [command]/usr/bin/git version
2025-08-13T18:03:08.3185386Z git version 2.50.1
2025-08-13T18:03:08.3221619Z Copying '/home/runner/.gitconfig' to '/home/runner/work/_temp/5a6fccd0-e1a7-4581-a47d-a8284b4d2641/.gitconfig'
2025-08-13T18:03:08.3231628Z Temporarily overriding HOME='/home/runner/work/_temp/5a6fccd0-e1a7-4581-a47d-a8284b4d2641' before making global git config changes
2025-08-13T18:03:08.3232699Z Adding repository directory to the temporary git global config as a safe directory
2025-08-13T18:03:08.3244413Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/easy_glm/easy_glm
2025-08-13T18:03:08.3278226Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-08-13T18:03:08.3309259Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-08-13T18:03:08.3537230Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-08-13T18:03:08.3558363Z http.https://github.com/.extraheader
2025-08-13T18:03:08.3571364Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-08-13T18:03:08.3600734Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-08-13T18:03:08.3922666Z Cleaning up orphan processes
